var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.459,1,0.824]],["body/components/AppComponent.html",[0,0.791,1,1.49,2,1.922,3,0.678,4,0.577,5,1.75,6,1.75,7,1.75,8,1.75,9,0.577,10,2.779,11,1.75,12,2.685,13,2.35,14,2.525,15,2.196,16,4.727,17,2.196,18,4.325,19,0.786,20,0.987,21,4.727,22,0.786,23,0.051,24,1.036,25,1.181,26,1.181,27,4.325,28,4.325,29,1.345,30,3.447,31,0.786,32,0.786,33,0.678,34,0.905,35,1.345,36,2.196,37,2.196,38,1.75,39,2.517,40,1.75,41,1.136,42,1.75,43,0.905,44,1.75,45,1.036,46,1.75,47,0.905,48,1.75,49,1.036,50,1.75,51,1.75,52,1.75,53,0.039,54,0.039]],["title/modules/AppModule.html",[55,1.6,56,1.6]],["body/modules/AppModule.html",[1,1.613,3,0.575,4,0.489,9,0.489,13,1.299,23,0.052,31,1.243,32,0.667,33,0.575,34,0.768,35,1.14,43,1.31,45,1.499,47,1.31,49,1.499,53,0.036,54,0.036,55,1.706,56,3.203,57,1.484,58,1.706,59,3.523,60,2.966,61,3.136,62,1.984,63,2.357,64,2.357,65,2.357,66,2.357,67,2.531,68,3.136,69,2.357,70,1.984,71,2.923,72,3.136,73,3.136,74,3.888,75,3.136,76,1.984,77,2.923,78,2.923,79,2.923,80,2.357,81,3.888,82,1.706,83,3.888,84,2.923,85,3.888,86,2.923,87,3.888,88,2.923,89,3.888,90,2.923,91,2.923,92,3.888,93,2.923,94,2.357,95,3.888,96,2.923,97,2.923]],["title/modules/AppRoutingModule.html",[55,1.6,67,1.392]],["body/modules/AppRoutingModule.html",[0,0.763,3,0.737,4,0.628,9,0.628,23,0.052,31,1.165,32,0.856,33,0.737,34,0.985,43,1.197,47,1.197,53,0.042,54,0.042,57,1.904,62,2.546,67,2.314,72,3.025,73,3.675,80,3.025,94,3.025,98,3.751,99,3.751,100,4.557,101,2.866,102,2.189,103,3.025,104,4.909,105,3.025,106,3.675,107,3.751,108,3.751,109,3.751,110,3.025]],["title/components/DetalhesComponent.html",[0,0.459,43,0.72]],["body/components/DetalhesComponent.html",[0,0.444,1,0.381,2,0.926,3,0.25,4,0.212,5,0.644,6,0.644,7,0.644,8,0.644,9,0.212,11,0.644,12,1.951,13,1.708,15,1.058,17,1.058,19,0.29,20,0.475,22,1.083,23,0.052,24,1.094,25,1.247,26,1.247,29,1.745,31,0.916,32,0.29,33,0.409,34,0.547,35,0.495,36,1.058,37,1.058,38,0.644,39,1.557,40,0.644,41,0.805,42,0.644,43,0.956,44,0.644,45,0.381,46,0.644,47,0.333,48,0.644,49,0.381,50,2.11,51,0.644,52,0.644,53,0.019,54,0.019,102,0.741,105,1.68,111,1.024,112,0.813,113,1.79,114,1.466,115,2.083,116,1.414,117,4.277,118,2.205,119,3.638,120,4.013,121,2.171,122,1.034,123,2.082,124,2.649,125,2.083,126,2.137,127,2.649,128,2.649,129,2.137,130,2.73,131,2.609,132,0.926,133,3.066,134,2.082,135,3.066,136,3.066,137,0.926,138,1.269,139,3.638,140,3.099,141,1.951,142,1.951,143,1.951,144,2.083,145,0.926,146,0.926,147,1.269,148,1.617,149,2.219,150,3.066,151,3.638,152,1.216,153,1.901,154,3.638,155,2.124,156,2.083,157,1.362,158,2.299,159,1.269,160,1.269,161,2.083,162,2.083,163,1.852,164,1.269,165,1.68,166,2.083,167,1.745,168,1.68,169,2.083,170,1.42,171,2.083,172,1.058,173,2.497,174,2.083,175,1.68,176,1.414,177,1.269,178,1.708,179,1.546,180,1.269,181,2.473,182,2.082,183,2.473,184,2.082,185,2.473,186,2.082,187,2.082,188,3.236,189,1.196,190,2.934,191,2.243,192,1.269,193,1.466,194,3.066,195,3.066,196,2.47,197,1.269,198,0.926,199,2.082,200,2.083,201,2.47,202,2.083,203,1.546,204,1.42,205,1.269,206,1.414,207,2.083,208,1.269,209,1.68,210,1.414,211,1.68,212,1.546,213,1.799,214,1.216,215,1.546,216,2.124,217,1.024,218,0.741,219,0.644,220,1.269,221,0.644,222,0.862,223,1.024,224,1.024,225,1.024,226,0.495,227,1.504,228,1.269,229,1.269,230,1.269,231,1.269,232,1.269,233,1.269,234,1.269,235,1.269,236,1.269,237,1.269,238,1.269,239,1.269,240,1.269,241,1.269,242,2.342,243,1.269,244,1.269,245,0.926,246,1.269,247,1.269,248,3.066,249,1.269,250,2.137,251,1.024,252,1.269,253,1.269,254,2.649,255,2.137,256,1.269,257,1.269,258,1.269,259,1.269,260,1.269,261,3.638,262,2.934,263,3.638,264,1.68,265,2.083,266,1.68,267,2.083,268,3.066,269,1.68,270,2.083,271,2.083,272,2.083,273,2.083,274,1.68,275,2.083,276,2.473,277,2.083,278,2.083,279,1.68,280,2.083,281,2.083,282,1.68,283,2.083,284,2.083,285,2.083,286,1.269,287,1.024,288,0.862,289,0.862]],["title/injectables/EpisodiosService.html",[143,1.392,290,1.069]],["body/injectables/EpisodiosService.html",[3,0.423,4,0.36,9,0.36,14,1.256,19,0.491,20,0.716,22,1.033,23,0.052,24,1.512,25,0.737,26,0.737,29,1.691,31,0.989,32,0.491,33,0.617,34,0.825,41,1.07,53,0.029,54,0.029,82,1.256,112,1.59,114,1.641,118,1.395,121,2.48,122,1.225,132,1.395,137,1.395,143,2.069,145,1.811,146,1.811,148,2.011,149,1.811,152,2.379,153,2.128,157,2.011,163,1.869,167,1.936,170,1.869,172,2.297,189,1.984,190,3.287,193,1.601,198,1.395,204,1.446,216,2.379,226,0.84,227,0.956,245,1.811,290,1.225,291,1.256,292,1.735,293,1.833,294,2.132,295,2.164,296,1.882,297,2.164,298,2.164,299,1.461,300,3.072,301,3.14,302,1.461,303,2.372,304,2.152,305,1.395,306,2.132,307,1.647,308,2.132,309,2.767,310,1.461,311,2.132,312,1.833,313,2.297,314,3.064,315,3.072,316,2.641,317,1.461,318,2.152,319,2.767,320,2.379,321,2.767,322,2.379,323,2.132,324,1.461,325,2.152,326,2.132,327,2.132,328,1.594,329,1.092,330,1.092,331,1.461,332,1.461,333,1.461,334,2.767,335,2.152,336,2.152,337,2.152,338,1.461]],["title/components/HeaderComponent.html",[0,0.459,45,0.824]],["body/components/HeaderComponent.html",[0,0.775,1,0.989,2,1.867,3,0.647,4,0.551,5,1.671,6,1.671,7,1.671,8,1.671,9,0.551,11,1.671,12,2.658,13,2.326,15,2.133,17,2.133,23,0.051,31,0.751,32,0.751,33,0.826,34,1.104,35,1.284,36,2.133,37,2.133,38,1.671,39,2.475,40,1.671,41,1.104,42,1.671,43,0.865,44,1.671,45,1.548,46,1.671,47,0.865,48,1.671,49,0.989,50,1.671,51,1.671,52,1.671,53,0.038,54,0.038,112,1.284,113,2.453,114,1.44,170,1.639,189,1.639,226,1.284,287,2.655,288,2.235,289,2.235,305,1.867,339,2.655,340,3.932,341,2.853,342,4.628,343,4.202,344,4.202,345,4.202,346,3.388,347,3.292]],["title/components/HomeComponent.html",[0,0.459,47,0.72]],["body/components/HomeComponent.html",[0,0.4,1,0.33,2,0.82,3,0.216,4,0.184,5,0.557,6,0.557,7,0.557,8,0.557,9,0.184,11,0.557,12,1.827,13,1.599,15,0.937,17,0.937,19,0.25,20,0.421,22,1.131,23,0.052,24,0.939,25,1.392,26,1.392,29,1.786,31,0.772,32,0.25,33,0.363,34,0.485,35,0.428,36,0.937,37,0.937,38,0.557,39,1.422,40,0.557,41,0.945,42,0.557,43,0.288,44,0.557,45,0.33,46,0.557,47,0.889,48,0.557,49,0.33,50,2.484,51,0.557,52,0.557,53,0.017,54,0.017,106,1.488,112,0.932,113,1.635,114,1.392,116,2.565,118,1.244,122,0.932,123,1.901,126,1.926,129,1.926,131,2.443,132,0.82,134,1.901,137,0.82,141,1.718,142,1.827,143,1.827,145,1.388,146,1.388,148,1.679,149,2.034,153,1.244,155,2.371,157,1.388,158,2.298,163,1.954,165,1.488,167,1.829,168,2.729,170,1.668,172,1.422,173,1.823,175,1.488,176,2.443,178,1.805,179,1.394,181,2.729,182,3.183,183,2.729,184,2.298,185,2.729,186,2.565,187,2.298,188,3.047,189,1.895,191,2.548,196,2.298,198,2.034,199,2.298,201,1.901,203,1.394,206,1.901,210,1.901,212,1.635,213,3.147,214,1.635,215,1.823,218,0.64,219,0.557,221,0.557,222,0.745,223,0.885,224,0.885,225,0.885,226,0.428,227,1.061,242,1.975,245,1.388,250,1.926,251,2.258,255,1.926,296,1.212,303,1.827,305,0.82,307,1.599,313,0.937,316,1.077,320,1.077,328,0.937,341,2.298,348,0.885,349,1.845,350,2.388,351,1.845,352,2.388,353,2.388,354,2.388,355,2.388,356,2.388,357,3.124,358,1.845,359,2.388,360,2.258,361,1.097,362,1.845,363,1.845,364,1.097,365,2.729,366,3.047,367,1.845,368,1.845,369,1.845,370,1.845,371,2.8,372,1.097,373,1.097,374,2.8,375,1.845,376,1.488,377,1.845,378,1.488,379,1.845,380,1.845,381,1.097,382,1.097,383,1.845,384,1.845,385,2.8,386,2.8,387,1.097,388,1.845,389,1.097,390,1.845,391,1.845,392,1.488,393,1.845,394,1.845,395,1.097,396,2.8,397,1.097,398,1.488,399,1.845,400,1.845,401,1.845,402,1.097,403,1.845,404,1.488,405,1.845,406,2.8,407,1.621,408,1.097,409,2.258,410,1.097,411,1.097,412,1.845,413,1.845,414,1.097,415,1.097,416,1.097,417,1.845,418,1.097,419,1.097,420,1.097,421,1.097,422,1.097,423,1.097,424,2.8,425,1.097,426,2.388,427,2.388,428,1.845,429,3.384,430,3.384,431,1.097,432,1.097,433,2.388,434,1.845,435,1.097,436,1.097,437,2.388,438,1.845,439,1.097,440,1.097,441,1.097,442,1.097,443,1.097,444,1.097,445,1.097,446,1.097,447,1.845]],["title/interfaces/IService.html",[204,1.069,448,1.392]],["body/interfaces/IService.html",[3,0.736,4,0.626,9,0.626,19,0.854,20,1.038,22,1.119,23,0.051,24,1.368,31,0.854,33,0.736,53,0.042,54,0.042,114,1.282,121,1.9,130,3.018,155,2.184,163,1.775,193,1.282,204,1.775,296,2.59,297,2.978,298,2.978,303,1.9,307,1.663,314,2.978,329,1.9,341,2.541,448,2.31,449,2.541,450,3.018,451,5.317,452,3.742]],["title/components/ListaComponent.html",[0,0.459,49,0.824]],["body/components/ListaComponent.html",[0,0.509,1,0.468,2,1.092,3,0.306,4,0.261,5,0.791,6,0.791,7,0.791,8,0.791,9,0.261,11,0.791,12,2.121,13,1.857,15,1.247,17,1.247,19,0.356,20,0.561,22,1.095,23,0.052,24,0.914,25,0.534,26,0.534,29,1.739,31,0.694,32,0.356,33,0.483,34,0.645,35,0.608,36,1.907,37,1.247,38,0.791,39,1.753,40,0.791,41,0.987,42,0.791,43,0.409,44,0.791,45,0.468,46,0.791,47,0.409,48,0.791,49,1.2,50,2.027,51,0.791,52,0.791,53,0.022,54,0.022,102,0.91,103,3.03,112,0.959,113,2.33,114,1.432,116,1.668,118,1.534,122,1.187,123,2.551,131,2.065,132,1.092,134,2.344,137,1.092,140,3.219,145,1.352,146,1.352,148,1.092,149,2.241,153,1.774,155,1.434,157,1.352,158,2.344,163,1.63,167,1.466,170,1.846,173,1.434,176,2.551,178,1.774,182,2.71,184,1.668,186,1.668,187,2.344,189,1.917,191,1.434,193,1.368,196,1.668,198,1.534,199,1.668,206,1.668,209,1.981,210,2.344,211,1.981,212,1.434,213,1.668,214,1.434,215,1.434,216,1.434,217,3.219,219,1.544,221,0.791,222,1.058,226,0.608,227,0.692,242,1.776,245,1.092,274,1.981,276,1.981,288,1.058,289,1.058,293,1.434,305,1.092,312,1.434,313,1.753,322,1.434,328,1.247,340,1.981,360,3.37,365,1.981,366,1.981,376,1.981,378,2.453,392,1.981,398,2.784,404,3.03,453,1.257,454,3.042,455,2.457,456,3.042,457,2.457,458,2.457,459,2.457,460,3.042,461,2.457,462,3.042,463,1.558,464,2.457,465,1.558,466,4.731,467,1.558,468,2.457,469,2.457,470,2.457,471,2.457,472,2.457,473,1.558,474,2.457,475,3.757,476,1.558,477,2.457,478,2.457,479,2.457,480,2.457,481,2.457,482,2.457,483,2.457,484,1.558,485,2.457,486,2.457,487,2.457,488,2.457,489,2.457,490,1.558,491,2.457,492,1.558,493,2.457,494,2.457,495,2.457,496,2.457,497,2.457,498,2.457,499,2.457,500,2.457,501,2.457,502,2.457,503,1.558,504,2.457,505,1.558,506,1.058,507,1.558,508,1.558,509,1.558,510,1.558,511,1.558,512,1.558,513,1.558,514,1.558,515,1.558,516,1.558,517,1.558,518,2.457,519,1.558,520,2.457,521,1.558,522,2.457,523,1.558,524,3.042,525,1.558,526,1.558,527,2.457,528,1.558,529,1.558,530,2.457,531,2.457,532,3.757,533,2.453,534,1.558,535,1.558,536,1.558,537,1.558,538,3.453,539,1.558,540,2.457,541,3.042,542,1.558,543,2.457,544,2.457,545,2.457,546,1.558,547,1.558,548,1.558,549,1.558]],["title/injectables/LocaisService.html",[142,1.392,290,1.069]],["body/injectables/LocaisService.html",[3,0.42,4,0.358,9,0.358,14,1.248,19,0.488,20,0.713,22,1.03,23,0.052,24,1.51,25,0.733,26,0.733,29,1.686,31,0.986,32,0.488,33,0.614,34,0.821,41,1.067,53,0.029,54,0.029,82,1.248,112,1.585,114,1.638,118,1.389,121,2.475,122,1.219,132,1.389,137,1.389,142,2.063,145,1.805,146,1.805,148,2.006,149,1.805,152,2.372,153,2.124,157,2.006,163,1.865,167,1.933,170,1.865,172,2.292,189,1.982,193,1.598,198,1.389,204,1.441,214,2.372,226,0.834,227,0.95,245,1.805,290,1.219,291,1.248,293,1.824,294,2.121,295,2.156,296,1.875,297,2.156,298,2.156,299,1.451,300,3.065,302,1.451,303,2.367,305,1.389,306,2.121,307,1.641,308,2.121,309,2.758,310,1.451,311,2.121,312,1.824,313,2.292,314,3.061,315,3.065,316,2.635,317,1.451,319,2.758,320,2.372,321,2.758,322,2.372,323,2.121,324,1.451,326,2.121,327,2.121,328,1.586,329,1.085,330,1.085,331,1.451,332,1.451,333,1.451,334,2.758,338,1.451,409,3.276,550,1.724,551,3.125,552,2.138,553,2.138,554,2.138,555,2.138,556,2.138,557,2.138,558,2.138,559,2.138,560,2.138]],["title/injectables/PersonagensService.html",[141,1.392,290,1.069]],["body/injectables/PersonagensService.html",[3,0.422,4,0.36,9,0.36,14,1.254,19,0.49,20,0.716,22,1.032,23,0.052,24,1.511,25,0.736,26,0.736,29,1.69,31,0.988,32,0.49,33,0.617,34,0.824,41,1.07,53,0.029,54,0.029,82,1.254,112,1.589,114,1.641,118,1.394,121,2.479,122,1.224,132,1.394,137,1.394,141,2.068,145,1.81,146,1.81,148,2.01,149,1.81,152,2.377,153,2.127,157,2.01,163,1.868,167,1.936,170,1.868,172,2.296,189,1.984,193,1.601,198,1.394,201,2.765,204,1.445,212,2.377,226,0.838,227,0.955,245,1.81,290,1.224,291,1.254,293,1.831,294,2.13,295,2.162,296,1.881,297,2.162,298,2.162,299,1.459,300,3.071,302,1.459,303,2.371,305,1.394,306,2.13,307,1.646,308,2.13,309,2.765,310,1.459,311,2.13,312,1.831,313,2.296,314,3.063,315,3.071,316,2.64,317,1.459,319,2.765,320,2.377,321,2.765,322,2.377,323,2.13,324,1.459,326,2.13,327,2.13,328,1.592,329,1.091,330,1.091,331,1.459,332,1.459,333,1.459,334,2.765,338,1.459,561,1.733,562,3.137,563,2.149,564,2.149,565,2.149,566,2.149,567,2.149,568,2.149]],["title/interfaces/TableHeader.html",[178,1.218,448,1.392]],["body/interfaces/TableHeader.html",[3,0.793,4,0.675,9,0.675,19,0.92,20,1.086,22,1.086,23,0.049,24,1.626,33,0.793,53,0.043,54,0.043,178,2.115,193,1.793,219,2.655,221,2.047,448,2.047,449,2.737,569,3.251]],["title/coverage.html",[570,3.003]],["body/coverage.html",[0,0.854,1,1.032,9,0.575,10,2.768,22,0.783,23,0.051,43,0.901,45,1.032,47,0.901,49,1.032,53,0.039,54,0.039,111,2.768,141,1.742,142,1.742,143,1.742,178,1.525,179,2.003,191,3.119,203,2.003,204,1.339,218,2.754,221,1.742,290,1.841,292,2.768,330,2.19,339,2.768,348,2.768,407,2.33,448,2.19,450,2.768,453,2.768,506,2.33,533,2.768,550,2.768,561,2.768,569,2.768,570,2.768,571,3.432,572,3.432,573,3.432,574,3.432,575,3.805,576,5.1,577,5.1,578,3.432,579,3.432,580,4.718,581,4.718,582,3.432,583,3.432,584,3.432,585,3.432,586,3.432,587,3.432,588,3.432,589,3.432,590,2.768,591,2.768,592,3.432]],["title/dependencies.html",[58,1.922,593,1.56]],["body/dependencies.html",[23,0.051,32,0.891,53,0.043,54,0.043,58,2.279,60,2.651,75,3.765,76,3.17,102,2.279,329,1.982,594,3.905,595,4.413,596,3.905,597,4.669,598,3.905,599,3.905,600,3.905,601,3.905,602,3.905,603,3.905,604,3.905,605,3.905,606,3.905,607,3.905,608,3.905]],["title/index.html",[19,0.524,609,2.297,610,2.297]],["body/index.html",[0,0.791,4,0.576,23,0.039,41,0.903,53,0.039,54,0.039,70,2.335,110,2.773,122,1.342,307,1.528,346,3.808,506,2.335,593,2.335,595,2.773,611,3.439,612,4.32,613,3.439,614,4.723,615,2.773,616,3.439,617,4.32,618,5.104,619,5.286,620,3.439,621,3.439,622,3.439,623,3.439,624,3.439,625,3.439,626,3.439,627,3.439,628,3.439,629,3.439,630,4.723,631,4.723,632,3.439,633,4.954,634,3.439,635,3.439,636,3.439,637,3.439,638,4.32,639,4.32,640,4.954,641,3.439,642,4.32,643,4.32,644,3.439,645,5.209,646,3.439,647,3.439,648,3.439,649,4.32,650,3.439,651,3.439,652,3.439,653,3.439,654,3.439,655,3.439,656,4.723,657,3.439,658,3.439,659,3.439,660,2.335,661,3.439]],["title/modules.html",[57,1.891]],["body/modules.html",[23,0.045,53,0.045,54,0.045,56,2.496,57,2.171,67,2.171,76,2.904,662,4.277,663,4.277,664,4.925,665,4.277,666,4.277]],["title/overview.html",[660,2.528]],["body/overview.html",[1,1.613,2,1.64,23,0.05,35,1.44,43,1.28,45,1.465,47,1.28,49,1.465,53,0.041,54,0.041,55,2.154,56,3.264,57,1.874,58,2.154,59,2.976,60,2.506,61,2.976,62,2.506,63,2.976,64,2.976,65,2.976,66,2.976,67,2.475,68,3.639,69,2.976,70,2.506,101,2.154,215,2.634,291,2.154,449,2.506,660,2.506,667,3.691,668,4.513]],["title/properties.html",[20,0.751,593,1.56]],["body/properties.html",[20,0.992,23,0.048,53,0.045,54,0.045,615,3.505,669,4.346]],["title/routes.html",[101,2.174]],["body/routes.html",[23,0.046,53,0.046,54,0.046,101,2.557]],["title/miscellaneous/variables.html",[670,1.853,671,2.655]],["body/miscellaneous/variables.html",[19,0.713,22,1.159,23,0.052,25,1.699,26,1.699,41,1.186,53,0.037,54,0.037,167,1.22,173,1.825,179,2.372,193,1.904,203,2.372,216,1.825,218,1.825,219,2.765,242,1.825,262,3.642,264,3.278,266,2.521,269,2.521,279,2.521,282,2.521,295,2.372,330,2.427,407,2.759,575,3.856,590,2.521,591,2.521,670,2.521,671,2.521,672,4.516,673,3.126,674,3.126,675,3.126,676,3.126,677,3.126,678,3.126,679,3.126,680,4.064,681,4.064]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":191,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":669,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":213,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["1/1",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["11/16/2023",{"_index":556,"title":{},"body":{"injectables/LocaisService.html":{}}}],["15/17",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["16.0.0",{"_index":595,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["16.2.12",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["1px",{"_index":543,"title":{},"body":{"components/ListaComponent.html":{}}}],["2",{"_index":215,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":526,"title":{},"body":{"components/ListaComponent.html":{}}}],["200px",{"_index":525,"title":{},"body":{"components/ListaComponent.html":{}}}],["2:35:10",{"_index":557,"title":{},"body":{"injectables/LocaisService.html":{}}}],["3",{"_index":668,"title":{},"body":{"overview.html":{}}}],["5",{"_index":667,"title":{},"body":{"overview.html":{}}}],["5.3.2",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":535,"title":{},"body":{"components/ListaComponent.html":{}}}],["7.8.0",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["abrirdetalhes",{"_index":457,"title":{},"body":{"components/ListaComponent.html":{}}}],["abrirdetalhes(id",{"_index":483,"title":{},"body":{"components/ListaComponent.html":{}}}],["acessada",{"_index":169,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["acionado",{"_index":365,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["activatedroute",{"_index":139,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["actual_component",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["add",{"_index":652,"title":{},"body":{"index.html":{}}}],["adicionam",{"_index":394,"title":{},"body":{"components/HomeComponent.html":{}}}],["air_date",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":346,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["angular/compiler",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["angular/material/form",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":102,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"components/ListaComponent.html":{},"dependencies.html":{}}}],["ao",{"_index":478,"title":{},"body":{"components/ListaComponent.html":{}}}],["aparece",{"_index":278,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["api",{"_index":313,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["apiurl",{"_index":295,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"miscellaneous/variables.html":{}}}],["aplicação",{"_index":341,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["app.component",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":624,"title":{},"body":{"index.html":{}}}],["applyfilter",{"_index":358,"title":{},"body":{"components/HomeComponent.html":{}}}],["applyfilter(e",{"_index":363,"title":{},"body":{"components/HomeComponent.html":{}}}],["appmodule",{"_index":56,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":67,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":206,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["artifacts",{"_index":634,"title":{},"body":{"index.html":{}}}],["atuais",{"_index":369,"title":{},"body":{"components/HomeComponent.html":{}}}],["atual",{"_index":328,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["atualizada",{"_index":375,"title":{},"body":{"components/HomeComponent.html":{}}}],["atualizado",{"_index":367,"title":{},"body":{"components/HomeComponent.html":{}}}],["auto",{"_index":537,"title":{},"body":{"components/ListaComponent.html":{}}}],["automatically",{"_index":625,"title":{},"body":{"index.html":{}}}],["available",{"_index":666,"title":{},"body":{"modules.html":{}}}],["bootstrap",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":541,"title":{},"body":{"components/ListaComponent.html":{}}}],["bottom",{"_index":542,"title":{},"body":{"components/ListaComponent.html":{}}}],["break",{"_index":255,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["browse",{"_index":664,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["buffer",{"_index":524,"title":{},"body":{"components/ListaComponent.html":{}}}],["build",{"_index":633,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":654,"title":{},"body":{"index.html":{}}}],["carrega",{"_index":391,"title":{},"body":{"components/HomeComponent.html":{}}}],["carregadas",{"_index":380,"title":{},"body":{"components/HomeComponent.html":{}}}],["carregado",{"_index":174,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["carregando",{"_index":494,"title":{},"body":{"components/ListaComponent.html":{}}}],["carregar",{"_index":151,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["carregarinformacoes",{"_index":133,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["case",{"_index":250,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["caso",{"_index":392,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["cell",{"_index":540,"title":{},"body":{"components/ListaComponent.html":{}}}],["change",{"_index":626,"title":{},"body":{"index.html":{}}}],["changeselectedtab",{"_index":359,"title":{},"body":{"components/HomeComponent.html":{}}}],["changeselectedtab(e",{"_index":372,"title":{},"body":{"components/HomeComponent.html":{}}}],["check",{"_index":659,"title":{},"body":{"index.html":{}}}],["chegar",{"_index":480,"title":{},"body":{"components/ListaComponent.html":{}}}],["choice",{"_index":648,"title":{},"body":{"index.html":{}}}],["class",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["cli",{"_index":614,"title":{},"body":{"index.html":{}}}],["clicado",{"_index":489,"title":{},"body":{"components/ListaComponent.html":{}}}],["cluster_appmodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":628,"title":{},"body":{"index.html":{}}}],["color",{"_index":548,"title":{},"body":{"components/ListaComponent.html":{}}}],["column).id",{"_index":517,"title":{},"body":{"components/ListaComponent.html":{}}}],["column.display",{"_index":530,"title":{},"body":{"components/ListaComponent.html":{}}}],["columnsdisplaycharacter",{"_index":203,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsdisplayepisode",{"_index":179,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsdisplaylocation",{"_index":407,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnstodisplay",{"_index":456,"title":{},"body":{"components/ListaComponent.html":{}}}],["coluna",{"_index":472,"title":{},"body":{"components/ListaComponent.html":{}}}],["colunas",{"_index":187,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["com",{"_index":172,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["command",{"_index":649,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["componente",{"_index":113,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"overview.html":{}}}],["console.log(`listando",{"_index":421,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(`scrollando",{"_index":445,"title":{},"body":{"components/HomeComponent.html":{}}}],["const",{"_index":103,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ListaComponent.html":{}}}],["constructor",{"_index":137,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["constructor(activatedroute",{"_index":138,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["constructor(httpclient",{"_index":299,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["constructor(personagensservice",{"_index":361,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(router",{"_index":463,"title":{},"body":{"components/ListaComponent.html":{}}}],["consumida",{"_index":309,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["consumindo",{"_index":370,"title":{},"body":{"components/HomeComponent.html":{}}}],["consumir",{"_index":383,"title":{},"body":{"components/HomeComponent.html":{}}}],["consumo",{"_index":312,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["contagem",{"_index":412,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":570,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["currentcolor",{"_index":549,"title":{},"body":{"components/ListaComponent.html":{}}}],["cursor",{"_index":288,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/ListaComponent.html":{}}}],["da",{"_index":189,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["dado",{"_index":118,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["dado.air_date",{"_index":283,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.dimension",{"_index":280,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.episode",{"_index":284,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.gender",{"_index":270,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.id",{"_index":261,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.location.name",{"_index":277,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.name",{"_index":263,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.origin.name",{"_index":272,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.species",{"_index":267,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.status",{"_index":265,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.type",{"_index":268,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado[column.id",{"_index":531,"title":{},"body":{"components/ListaComponent.html":{}}}],["dados",{"_index":198,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["das",{"_index":186,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["data",{"_index":242,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"miscellaneous/variables.html":{}}}],["data.info.pages",{"_index":430,"title":{},"body":{"components/HomeComponent.html":{}}}],["date",{"_index":555,"title":{},"body":{"injectables/LocaisService.html":{}}}],["de",{"_index":167,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["dentro",{"_index":188,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["dependencies",{"_index":58,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":112,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["destino",{"_index":514,"title":{},"body":{"components/ListaComponent.html":{}}}],["detalhes",{"_index":117,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["detalhes'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["detalhes.component.css",{"_index":124,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["detalhes.component.html",{"_index":125,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["detalhes/:tipo/:id",{"_index":105,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{}}}],["detalhescomponent",{"_index":43,"title":{"components/DetalhesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dev",{"_index":621,"title":{},"body":{"index.html":{}}}],["deve",{"_index":385,"title":{},"body":{"components/HomeComponent.html":{}}}],["development",{"_index":616,"title":{},"body":{"index.html":{}}}],["dimension",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dimensão",{"_index":279,"title":{},"body":{"components/DetalhesComponent.html":{},"miscellaneous/variables.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["directives",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":632,"title":{},"body":{"index.html":{}}}],["directory",{"_index":637,"title":{},"body":{"index.html":{}}}],["diretamente",{"_index":513,"title":{},"body":{"components/ListaComponent.html":{}}}],["disparado",{"_index":477,"title":{},"body":{"components/ListaComponent.html":{}}}],["disparar",{"_index":390,"title":{},"body":{"components/HomeComponent.html":{}}}],["display",{"_index":219,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"interfaces/TableHeader.html":{},"miscellaneous/variables.html":{}}}],["display.ts",{"_index":575,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["displayedcolumns",{"_index":460,"title":{},"body":{"components/ListaComponent.html":{}}}],["displays",{"_index":183,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["disponíveis",{"_index":207,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dist",{"_index":636,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":571,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["dos",{"_index":184,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["dynamic",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":182,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["e.target.offsetheight",{"_index":519,"title":{},"body":{"components/ListaComponent.html":{}}}],["e.target.scrollheight",{"_index":521,"title":{},"body":{"components/ListaComponent.html":{}}}],["e.target.scrolltop",{"_index":523,"title":{},"body":{"components/ListaComponent.html":{}}}],["e.target.value",{"_index":440,"title":{},"body":{"components/HomeComponent.html":{}}}],["e2e",{"_index":646,"title":{},"body":{"index.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["eles",{"_index":211,"title":{},"body":{"components/DetalhesComponent.html":{},"components/ListaComponent.html":{}}}],["em",{"_index":276,"title":{},"body":{"components/DetalhesComponent.html":{},"components/ListaComponent.html":{}}}],["end",{"_index":645,"title":{},"body":{"index.html":{}}}],["enviroment",{"_index":327,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["environment",{"_index":330,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":326,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["episode",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["episodio",{"_index":251,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["episodios",{"_index":396,"title":{},"body":{"components/HomeComponent.html":{}}}],["episodioscolumns",{"_index":126,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["episodiosdados",{"_index":352,"title":{},"body":{"components/HomeComponent.html":{}}}],["episodiosservice",{"_index":143,"title":{"injectables/EpisodiosService.html":{}},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["episódio",{"_index":216,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/ListaComponent.html":{},"miscellaneous/variables.html":{}}}],["episódios",{"_index":190,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{}}}],["espécie",{"_index":266,"title":{},"body":{"components/DetalhesComponent.html":{},"miscellaneous/variables.html":{}}}],["est",{"_index":376,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["esteja",{"_index":497,"title":{},"body":{"components/ListaComponent.html":{}}}],["eventemitter",{"_index":475,"title":{},"body":{"components/ListaComponent.html":{}}}],["execute",{"_index":642,"title":{},"body":{"index.html":{}}}],["exibido",{"_index":154,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["exibidos",{"_index":196,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["exibindo",{"_index":474,"title":{},"body":{"components/ListaComponent.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{}}}],["exports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["field",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"coverage.html":{}}}],["files",{"_index":627,"title":{},"body":{"index.html":{}}}],["filtragem",{"_index":400,"title":{},"body":{"components/HomeComponent.html":{}}}],["filtro",{"_index":303,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["fim",{"_index":481,"title":{},"body":{"components/ListaComponent.html":{}}}],["final",{"_index":404,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["finalpage",{"_index":353,"title":{},"body":{"components/HomeComponent.html":{}}}],["first",{"_index":651,"title":{},"body":{"index.html":{}}}],["fora",{"_index":488,"title":{},"body":{"components/ListaComponent.html":{}}}],["frontend",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["frontendrickemorty",{"_index":611,"title":{},"body":{"index.html":{}}}],["function",{"_index":451,"title":{},"body":{"interfaces/IService.html":{}}}],["further",{"_index":655,"title":{},"body":{"index.html":{}}}],["gender",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":630,"title":{},"body":{"index.html":{}}}],["generated",{"_index":613,"title":{},"body":{"index.html":{}}}],["genérica",{"_index":306,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["genêro",{"_index":269,"title":{},"body":{"components/DetalhesComponent.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":609,"title":{"index.html":{}},"body":{}}],["go",{"_index":658,"title":{},"body":{"index.html":{}}}],["graph",{"_index":665,"title":{},"body":{"modules.html":{}}}],["guardar",{"_index":403,"title":{},"body":{"components/HomeComponent.html":{}}}],["hajam",{"_index":393,"title":{},"body":{"components/HomeComponent.html":{}}}],["header",{"_index":340,"title":{},"body":{"components/HeaderComponent.html":{},"components/ListaComponent.html":{}}}],["header'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["header.component.css",{"_index":342,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":343,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.model",{"_index":222,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["header.model.ts",{"_index":569,"title":{},"body":{"interfaces/TableHeader.html":{},"coverage.html":{}}}],["headercomponent",{"_index":45,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":185,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["height",{"_index":534,"title":{},"body":{"components/ListaComponent.html":{}}}],["help",{"_index":656,"title":{},"body":{"index.html":{}}}],["home",{"_index":106,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["home.component.css",{"_index":350,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":351,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":47,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hora",{"_index":405,"title":{},"body":{"components/HomeComponent.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["http://localhost:4200",{"_index":623,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":300,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["httpclientmodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["https://rickandmortyapi.com/api",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":193,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"miscellaneous/variables.html":{}}}],["iddado",{"_index":127,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["identifier",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":181,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["implements",{"_index":122,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"index.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"miscellaneous/variables.html":{}}}],["infinito",{"_index":500,"title":{},"body":{"components/ListaComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{}}}],["informações",{"_index":152,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["injectable",{"_index":290,"title":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"coverage.html":{}}}],["injectables",{"_index":291,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"overview.html":{}}}],["input",{"_index":217,"title":{},"body":{"components/DetalhesComponent.html":{},"components/ListaComponent.html":{}}}],["inputs",{"_index":459,"title":{},"body":{"components/ListaComponent.html":{}}}],["interface",{"_index":448,"title":{"interfaces/IService.html":{},"interfaces/TableHeader.html":{}},"body":{"interfaces/IService.html":{},"interfaces/TableHeader.html":{},"coverage.html":{}}}],["interface/iservice",{"_index":332,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["interfaces",{"_index":449,"title":{},"body":{"interfaces/IService.html":{},"interfaces/TableHeader.html":{},"overview.html":{}}}],["ir",{"_index":150,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["iservice",{"_index":204,"title":{"interfaces/IService.html":{}},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"coverage.html":{}}}],["karma",{"_index":644,"title":{},"body":{"index.html":{}}}],["lançamento",{"_index":282,"title":{},"body":{"components/DetalhesComponent.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"overview.html":{}}}],["limit",{"_index":527,"title":{},"body":{"components/ListaComponent.html":{}}}],["limpando",{"_index":368,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":287,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{}}}],["lista",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["lista.component.css",{"_index":454,"title":{},"body":{"components/ListaComponent.html":{}}}],["lista.component.html",{"_index":455,"title":{},"body":{"components/ListaComponent.html":{}}}],["listacomponent",{"_index":49,"title":{"components/ListaComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listagem",{"_index":305,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["listar",{"_index":296,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["listar(page",{"_index":302,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["listar(tipodado",{"_index":381,"title":{},"body":{"components/HomeComponent.html":{}}}],["listarunico",{"_index":297,"title":{},"body":{"injectables/EpisodiosService.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["listarunico(id",{"_index":317,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["listarunicoporurl",{"_index":298,"title":{},"body":{"injectables/EpisodiosService.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["listarunicoporurl(url",{"_index":324,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["listas",{"_index":413,"title":{},"body":{"components/HomeComponent.html":{}}}],["listasecundaria",{"_index":128,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["lo",{"_index":512,"title":{},"body":{"components/ListaComponent.html":{}}}],["locais",{"_index":409,"title":{},"body":{"components/HomeComponent.html":{},"injectables/LocaisService.html":{}}}],["locaiscolumns",{"_index":354,"title":{},"body":{"components/HomeComponent.html":{}}}],["locaisdados",{"_index":355,"title":{},"body":{"components/HomeComponent.html":{}}}],["locaisservice",{"_index":142,"title":{"injectables/LocaisService.html":{}},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"injectables/LocaisService.html":{},"coverage.html":{}}}],["local",{"_index":214,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{}}}],["ltima",{"_index":274,"title":{},"body":{"components/DetalhesComponent.html":{},"components/ListaComponent.html":{}}}],["mapeamento",{"_index":501,"title":{},"body":{"components/ListaComponent.html":{}}}],["mapping",{"_index":507,"title":{},"body":{"components/ListaComponent.html":{}}}],["mat",{"_index":532,"title":{},"body":{"components/ListaComponent.html":{}}}],["matching",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["mdc",{"_index":538,"title":{},"body":{"components/ListaComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["methods",{"_index":132,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["miscellaneous",{"_index":670,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":55,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":57,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":657,"title":{},"body":{"index.html":{}}}],["morty",{"_index":345,"title":{},"body":{"components/HeaderComponent.html":{}}}],["mostrado",{"_index":471,"title":{},"body":{"components/ListaComponent.html":{}}}],["mostrar",{"_index":115,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["método",{"_index":148,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["na",{"_index":155,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navigate",{"_index":622,"title":{},"body":{"index.html":{}}}],["need",{"_index":650,"title":{},"body":{"index.html":{}}}],["neste",{"_index":285,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["new",{"_index":506,"title":{},"body":{"components/ListaComponent.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":619,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":134,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["nico",{"_index":321,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["nome",{"_index":262,"title":{},"body":{"components/DetalhesComponent.html":{},"miscellaneous/variables.html":{}}}],["nos",{"_index":401,"title":{},"body":{"components/HomeComponent.html":{}}}],["nova",{"_index":175,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["novo",{"_index":171,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["novos",{"_index":371,"title":{},"body":{"components/HomeComponent.html":{}}}],["numa",{"_index":377,"title":{},"body":{"components/HomeComponent.html":{}}}],["number",{"_index":163,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["number(params['id",{"_index":240,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["number(params['tipo",{"_index":238,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["não",{"_index":378,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["o",{"_index":170,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["object",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":314,"title":{},"body":{"injectables/EpisodiosService.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["onchanges",{"_index":503,"title":{},"body":{"components/ListaComponent.html":{}}}],["oninit",{"_index":123,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["onsameurlnavigation",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ontablescroll",{"_index":458,"title":{},"body":{"components/ListaComponent.html":{}}}],["ontablescroll(e",{"_index":491,"title":{},"body":{"components/ListaComponent.html":{}}}],["optional",{"_index":146,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["origem",{"_index":271,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["os",{"_index":116,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["ou",{"_index":202,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["out",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":504,"title":{},"body":{"components/ListaComponent.html":{}}}],["outputs",{"_index":461,"title":{},"body":{"components/ListaComponent.html":{}}}],["outras",{"_index":165,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["overflow",{"_index":536,"title":{},"body":{"components/ListaComponent.html":{}}}],["overview",{"_index":660,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":593,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":307,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"index.html":{}}}],["pages/detalhes/detalhes.component",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/home/home.component",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page}/${this.finalpage[tipodado",{"_index":422,"title":{},"body":{"components/HomeComponent.html":{}}}],["pagina",{"_index":308,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["paginação",{"_index":406,"title":{},"body":{"components/HomeComponent.html":{}}}],["pai",{"_index":479,"title":{},"body":{"components/ListaComponent.html":{}}}],["para",{"_index":114,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["param",{"_index":245,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["parameters",{"_index":145,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["params",{"_index":236,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["passada",{"_index":486,"title":{},"body":{"components/ListaComponent.html":{}}}],["path",{"_index":104,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pela",{"_index":120,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["pelo",{"_index":487,"title":{},"body":{"components/ListaComponent.html":{}}}],["personagem",{"_index":212,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/PersonagensService.html":{}}}],["personagens",{"_index":201,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"injectables/PersonagensService.html":{}}}],["personagenscolumns",{"_index":129,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["personagensdados",{"_index":356,"title":{},"body":{"components/HomeComponent.html":{}}}],["personagensservice",{"_index":141,"title":{"injectables/PersonagensService.html":{}},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"injectables/PersonagensService.html":{},"coverage.html":{}}}],["pesquisa",{"_index":316,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["pesquisar",{"_index":447,"title":{},"body":{"components/HomeComponent.html":{}}}],["platform",{"_index":647,"title":{},"body":{"index.html":{}}}],["podendo",{"_index":200,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["pointer",{"_index":289,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/ListaComponent.html":{}}}],["pois",{"_index":509,"title":{},"body":{"components/ListaComponent.html":{}}}],["possibilita",{"_index":499,"title":{},"body":{"components/ListaComponent.html":{}}}],["possível",{"_index":510,"title":{},"body":{"components/ListaComponent.html":{}}}],["preencher",{"_index":384,"title":{},"body":{"components/HomeComponent.html":{}}}],["preenchido",{"_index":386,"title":{},"body":{"components/HomeComponent.html":{}}}],["principal",{"_index":349,"title":{},"body":{"components/HomeComponent.html":{}}}],["private",{"_index":227,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["project",{"_index":612,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"properties.html":{}}}],["providedin",{"_index":333,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["próxima",{"_index":495,"title":{},"body":{"components/ListaComponent.html":{}}}],["puxar",{"_index":469,"title":{},"body":{"components/ListaComponent.html":{}}}],["página",{"_index":176,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["páginas",{"_index":166,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["quando",{"_index":366,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["que",{"_index":149,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["realiz",{"_index":511,"title":{},"body":{"components/ListaComponent.html":{}}}],["realizado",{"_index":508,"title":{},"body":{"components/ListaComponent.html":{}}}],["realizar",{"_index":399,"title":{},"body":{"components/HomeComponent.html":{}}}],["receber",{"_index":168,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["recebido",{"_index":119,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["recuperado",{"_index":323,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["recuperar",{"_index":319,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["recuperarlista",{"_index":135,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["recuperação",{"_index":294,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["redirecionar",{"_index":136,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["redirecionar(url",{"_index":162,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["redirectto",{"_index":107,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":661,"title":{},"body":{"index.html":{}}}],["reload",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["reset",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resgate",{"_index":485,"title":{},"body":{"components/ListaComponent.html":{}}}],["residente",{"_index":256,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["residentes",{"_index":281,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["resultado",{"_index":315,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["results",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":334,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["returns",{"_index":157,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["rick",{"_index":344,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rickemorty",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["router",{"_index":140,"title":{},"body":{"components/DetalhesComponent.html":{},"components/ListaComponent.html":{}}}],["routermodule",{"_index":100,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":108,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":101,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":99,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":539,"title":{},"body":{"components/ListaComponent.html":{}}}],["row:hover",{"_index":547,"title":{},"body":{"components/ListaComponent.html":{}}}],["run",{"_index":618,"title":{},"body":{"index.html":{}}}],["running",{"_index":638,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":329,"title":{},"body":{"injectables/EpisodiosService.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":629,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":360,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["scroll(tipodado",{"_index":388,"title":{},"body":{"components/HomeComponent.html":{}}}],["scrollfimpagina",{"_index":462,"title":{},"body":{"components/ListaComponent.html":{}}}],["scrolllocation",{"_index":522,"title":{},"body":{"components/ListaComponent.html":{}}}],["secundária",{"_index":161,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["seja",{"_index":498,"title":{},"body":{"components/ListaComponent.html":{}}}],["selecionado",{"_index":417,"title":{},"body":{"components/HomeComponent.html":{}}}],["selected",{"_index":357,"title":{},"body":{"components/HomeComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["sendo",{"_index":210,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["ser",{"_index":153,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["seria",{"_index":209,"title":{},"body":{"components/DetalhesComponent.html":{},"components/ListaComponent.html":{}}}],["seriam",{"_index":468,"title":{},"body":{"components/ListaComponent.html":{}}}],["serve",{"_index":620,"title":{},"body":{"index.html":{}}}],["server",{"_index":617,"title":{},"body":{"index.html":{}}}],["service",{"_index":293,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["services",{"_index":130,"title":{},"body":{"components/DetalhesComponent.html":{},"interfaces/IService.html":{}}}],["serão",{"_index":199,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["seu",{"_index":482,"title":{},"body":{"components/ListaComponent.html":{}}}],["seus",{"_index":195,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["shared/header/header.component",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/lista/lista.component",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["simplechanges",{"_index":505,"title":{},"body":{"components/ListaComponent.html":{}}}],["solid",{"_index":544,"title":{},"body":{"components/ListaComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"index.html":{}}}],["species",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../columns",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":98,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/consts/columns",{"_index":218,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interface/iservice",{"_index":220,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/core/interface/iservice.ts",{"_index":450,"title":{},"body":{"interfaces/IService.html":{},"coverage.html":{}}}],["src/app/core/model/table",{"_index":221,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"interfaces/TableHeader.html":{},"coverage.html":{}}}],["src/app/core/services/episodios.service",{"_index":223,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["src/app/core/services/episodios.service.ts",{"_index":292,"title":{},"body":{"injectables/EpisodiosService.html":{},"coverage.html":{}}}],["src/app/core/services/episodios.service.ts:25",{"_index":301,"title":{},"body":{"injectables/EpisodiosService.html":{}}}],["src/app/core/services/episodios.service.ts:38",{"_index":304,"title":{},"body":{"injectables/EpisodiosService.html":{}}}],["src/app/core/services/episodios.service.ts:52",{"_index":318,"title":{},"body":{"injectables/EpisodiosService.html":{}}}],["src/app/core/services/episodios.service.ts:62",{"_index":325,"title":{},"body":{"injectables/EpisodiosService.html":{}}}],["src/app/core/services/locais.service",{"_index":224,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["src/app/core/services/locais.service.ts",{"_index":550,"title":{},"body":{"injectables/LocaisService.html":{},"coverage.html":{}}}],["src/app/core/services/locais.service.ts:26",{"_index":551,"title":{},"body":{"injectables/LocaisService.html":{}}}],["src/app/core/services/locais.service.ts:39",{"_index":552,"title":{},"body":{"injectables/LocaisService.html":{}}}],["src/app/core/services/locais.service.ts:53",{"_index":553,"title":{},"body":{"injectables/LocaisService.html":{}}}],["src/app/core/services/locais.service.ts:63",{"_index":554,"title":{},"body":{"injectables/LocaisService.html":{}}}],["src/app/core/services/personagens.service",{"_index":225,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["src/app/core/services/personagens.service.ts",{"_index":561,"title":{},"body":{"injectables/PersonagensService.html":{},"coverage.html":{}}}],["src/app/core/services/personagens.service.ts:25",{"_index":562,"title":{},"body":{"injectables/PersonagensService.html":{}}}],["src/app/core/services/personagens.service.ts:38",{"_index":563,"title":{},"body":{"injectables/PersonagensService.html":{}}}],["src/app/core/services/personagens.service.ts:52",{"_index":564,"title":{},"body":{"injectables/PersonagensService.html":{}}}],["src/app/core/services/personagens.service.ts:62",{"_index":565,"title":{},"body":{"injectables/PersonagensService.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts",{"_index":111,"title":{},"body":{"components/DetalhesComponent.html":{},"coverage.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:114",{"_index":164,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:125",{"_index":160,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:30",{"_index":208,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:37",{"_index":192,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:44",{"_index":205,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:51",{"_index":177,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:58",{"_index":197,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:65",{"_index":180,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:72",{"_index":144,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:86",{"_index":159,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:93",{"_index":147,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":348,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts:111",{"_index":382,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:173",{"_index":364,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:187",{"_index":373,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:196",{"_index":389,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:28",{"_index":416,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:35",{"_index":411,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:42",{"_index":402,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:49",{"_index":415,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:56",{"_index":414,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:63",{"_index":410,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:70",{"_index":408,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:77",{"_index":397,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:84",{"_index":395,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:91",{"_index":362,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:99",{"_index":387,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":339,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/lista/lista.component.ts",{"_index":453,"title":{},"body":{"components/ListaComponent.html":{},"coverage.html":{}}}],["src/app/shared/lista/lista.component.ts:25",{"_index":467,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/shared/lista/lista.component.ts:32",{"_index":473,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/shared/lista/lista.component.ts:39",{"_index":465,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/shared/lista/lista.component.ts:46",{"_index":476,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/shared/lista/lista.component.ts:53",{"_index":464,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/shared/lista/lista.component.ts:59",{"_index":490,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/shared/lista/lista.component.ts:71",{"_index":492,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/shared/lista/lista.component.ts:90",{"_index":484,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/environments/environment",{"_index":331,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["src/environments/environment.development.ts",{"_index":590,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":591,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":610,"title":{"index.html":{}},"body":{}}],["statements",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":264,"title":{},"body":{"components/DetalhesComponent.html":{},"miscellaneous/variables.html":{}}}],["stored",{"_index":635,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["support",{"_index":662,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":663,"title":{},"body":{"modules.html":{}}}],["switch(this.tipodado",{"_index":249,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["switch(tipodado",{"_index":423,"title":{},"body":{"components/HomeComponent.html":{}}}],["são",{"_index":379,"title":{},"body":{"components/HomeComponent.html":{}}}],["tab",{"_index":374,"title":{},"body":{"components/HomeComponent.html":{}}}],["tabela",{"_index":466,"title":{},"body":{"components/ListaComponent.html":{}}}],["table",{"_index":533,"title":{},"body":{"components/ListaComponent.html":{},"coverage.html":{}}}],["tableheader",{"_index":178,"title":{"interfaces/TableHeader.html":{}},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"interfaces/TableHeader.html":{},"coverage.html":{}}}],["tablescrollheight",{"_index":520,"title":{},"body":{"components/ListaComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["tableviewheight",{"_index":518,"title":{},"body":{"components/ListaComponent.html":{}}}],["tela",{"_index":156,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["ter",{"_index":194,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["test",{"_index":641,"title":{},"body":{"index.html":{}}}],["testing",{"_index":653,"title":{},"body":{"index.html":{}}}],["tests",{"_index":640,"title":{},"body":{"index.html":{}}}],["texto",{"_index":286,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.activatedroute.params.subscribe",{"_index":235,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.carregarinformacoes",{"_index":234,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.columnstodisplay",{"_index":515,"title":{},"body":{"components/ListaComponent.html":{}}}],["this.dado",{"_index":243,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.dado.characters",{"_index":259,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.dado.episode",{"_index":252,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.dado.residents",{"_index":257,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.displayedcolumns.map((column",{"_index":516,"title":{},"body":{"components/ListaComponent.html":{}}}],["this.episodiosdados",{"_index":437,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.episodiosdados.concat(data.results",{"_index":438,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.episodiosservice",{"_index":233,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.episodiosservice.listar(page",{"_index":436,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.episodiosservice.listar(page).subscribe",{"_index":439,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filtro",{"_index":424,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filtro).subscribe",{"_index":426,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.finalpage[tipodado",{"_index":429,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.httpclient.get(`${this.apiurl}/character/${id",{"_index":568,"title":{},"body":{"injectables/PersonagensService.html":{}}}],["this.httpclient.get(`${this.apiurl}/character/?page=${page",{"_index":567,"title":{},"body":{"injectables/PersonagensService.html":{}}}],["this.httpclient.get(`${this.apiurl}/character/?page=${page}&name=${filtro",{"_index":566,"title":{},"body":{"injectables/PersonagensService.html":{}}}],["this.httpclient.get(`${this.apiurl}/episode/${id",{"_index":337,"title":{},"body":{"injectables/EpisodiosService.html":{}}}],["this.httpclient.get(`${this.apiurl}/episode/?page=${page",{"_index":336,"title":{},"body":{"injectables/EpisodiosService.html":{}}}],["this.httpclient.get(`${this.apiurl}/episode/?page=${page}&name=${filtro",{"_index":335,"title":{},"body":{"injectables/EpisodiosService.html":{}}}],["this.httpclient.get(`${this.apiurl}/location/${id",{"_index":560,"title":{},"body":{"injectables/LocaisService.html":{}}}],["this.httpclient.get(`${this.apiurl}/location/?page=${page",{"_index":559,"title":{},"body":{"injectables/LocaisService.html":{}}}],["this.httpclient.get(`${this.apiurl}/location/?page=${page}&name=${filtro",{"_index":558,"title":{},"body":{"injectables/LocaisService.html":{}}}],["this.httpclient.get(url",{"_index":338,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["this.iddado",{"_index":239,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.listar(0",{"_index":418,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.listar(1",{"_index":419,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.listar(2",{"_index":420,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.listar(this.selected",{"_index":442,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.listasecundaria",{"_index":248,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.listasecundaria.concat(data",{"_index":254,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.locaisdados",{"_index":433,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.locaisdados.concat(data.results",{"_index":434,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.locaisservice",{"_index":231,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.locaisservice.listar(page",{"_index":432,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.locaisservice.listar(page).subscribe",{"_index":435,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.page",{"_index":441,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.page[this.selected",{"_index":443,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.page[tipodado",{"_index":446,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.personagensdados",{"_index":427,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.personagensdados.concat(data.results",{"_index":428,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.personagensservice",{"_index":229,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.personagensservice.listar(page",{"_index":425,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.personagensservice.listar(page).subscribe",{"_index":431,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.recuperarlista",{"_index":244,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.router.navigate([`/detalhes/${tipodado}/${data.id",{"_index":247,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.router.navigate([`detalhes/${this.tipodado}/${id",{"_index":529,"title":{},"body":{"components/ListaComponent.html":{}}}],["this.scrollfimpagina.emit(this.tipodado",{"_index":528,"title":{},"body":{"components/ListaComponent.html":{}}}],["this.selected",{"_index":444,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.services[0",{"_index":228,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.services[1",{"_index":230,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.services[2",{"_index":232,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.services[this.tipodado].listarunico(this.iddado).subscribe",{"_index":241,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.services[this.tipodado].listarunicoporurl(episodio).subscribe",{"_index":253,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.services[this.tipodado].listarunicoporurl(personagem).subscribe",{"_index":260,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.services[this.tipodado].listarunicoporurl(residente).subscribe",{"_index":258,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.services[tipodado].listarunicoporurl(url).subscribe",{"_index":246,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.tipodado",{"_index":237,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["tipo",{"_index":173,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"miscellaneous/variables.html":{}}}],["tipodado",{"_index":131,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":493,"title":{},"body":{"components/ListaComponent.html":{}}}],["toolbar",{"_index":347,"title":{},"body":{"components/HeaderComponent.html":{}}}],["top",{"_index":546,"title":{},"body":{"components/ListaComponent.html":{}}}],["transparent",{"_index":545,"title":{},"body":{"components/ListaComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["tslib",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typedef",{"_index":226,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["um",{"_index":320,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["unit",{"_index":639,"title":{},"body":{"index.html":{}}}],["url",{"_index":121,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["use",{"_index":631,"title":{},"body":{"index.html":{}}}],["utilizadas",{"_index":452,"title":{},"body":{"interfaces/IService.html":{}}}],["utilizado",{"_index":311,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["utilizando",{"_index":322,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["utilização",{"_index":502,"title":{},"body":{"components/ListaComponent.html":{}}}],["valor",{"_index":398,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["valores",{"_index":470,"title":{},"body":{"components/ListaComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["variable",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":671,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":615,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vez",{"_index":275,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["via",{"_index":643,"title":{},"body":{"index.html":{}}}],["visto",{"_index":273,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["visualização",{"_index":496,"title":{},"body":{"components/ListaComponent.html":{}}}],["void",{"_index":158,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["yes",{"_index":310,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["zone.js",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'frontend-rickemorty'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend-rickemorty';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetalhesComponent', 'selector': 'app-detalhes'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListaComponent', 'selector': 'app-lista'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDetalhesComponent\n\nDetalhesComponent\n\nAppModule -->\n\nDetalhesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nListaComponent\n\nListaComponent\n\nAppModule -->\n\nListaComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DetalhesComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            ListaComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ListaComponent } from './shared/lista/lista.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { HttpClientModule } from  '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs'; \nimport { MatFormFieldModule } from '@angular/material/form-field'; \nimport { MatInputModule } from '@angular/material/input';\nimport { DetalhesComponent } from './pages/detalhes/detalhes.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { HeaderComponent } from './shared/header/header.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListaComponent,\n    HomeComponent,\n    DetalhesComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatToolbarModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { DetalhesComponent } from './pages/detalhes/detalhes.component';\n\nconst routes: Routes = [\n  { path: 'detalhes/:tipo/:id', component: DetalhesComponent},\n  { path: 'home', component: HomeComponent },\n  { path: '**', redirectTo: '/home'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetalhesComponent.html":{"url":"components/DetalhesComponent.html","title":"component - DetalhesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetalhesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/detalhes/detalhes.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar os detalhes do dado recebido pela URL (/detalhes/:tipo/:id)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detalhes\n            \n\n\n\n            \n                styleUrls\n                ./detalhes.component.css\n            \n\n\n\n            \n                templateUrl\n                ./detalhes.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dado\n                            \n                            \n                                episodiosColumns\n                            \n                            \n                                idDado\n                            \n                            \n                                listaSecundaria\n                            \n                            \n                                personagensColumns\n                            \n                            \n                                services\n                            \n                            \n                                tipoDado\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                carregarInformacoes\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                recuperarLista\n                            \n                            \n                                redirecionar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, router: Router, personagensService: PersonagensService, locaisService: LocaisService, episodiosService: EpisodiosService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        personagensService\n                                                  \n                                                        \n                                                                        PersonagensService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locaisService\n                                                  \n                                                        \n                                                                        LocaisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        episodiosService\n                                                  \n                                                        \n                                                                        EpisodiosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        carregarInformacoes\n                        \n                    \n                \n            \n            \n                \ncarregarInformacoes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/detalhes/detalhes.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Método que irá carregar as informações do dado que será exibido na tela.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/detalhes/detalhes.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recuperarLista\n                        \n                    \n                \n            \n            \n                \nrecuperarLista()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/detalhes/detalhes.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Método para carregar a lista secundária do dado\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirecionar\n                        \n                    \n                \n            \n            \n                \nredirecionar(url: string, tipoDado: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/detalhes/detalhes.component.ts:114\n                        \n                    \n\n\n            \n                \n                        Método para redirecionar para outras páginas de detalhes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    String que receberá a URL que será acessada para carregar o novo dado.\n\n                                            \n                                        \n                                        \n                                                tipoDado\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number com o tipo do dado que irá ser carregado na nova página.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:51\n                        \n                    \n\n            \n                \n                    Dado que será exibido.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        episodiosColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableHeader[]\n\n                    \n                \n                \n                    \n                        Default value : columnsDisplayEpisode\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:65\n                        \n                    \n\n            \n                \n                    Ids e Displays dos headers das colunas dentro da lista de episódios.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idDado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:37\n                        \n                    \n\n            \n                \n                    Number, id do dado que terá seus detalhes exibidos. Recebido pela URL (:id).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listaSecundaria\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:58\n                        \n                    \n\n            \n                \n                    Dados que serão exibidos na lista dentro do dado exibido, podendo ser de personagens ou episódios.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personagensColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableHeader[]\n\n                    \n                \n                \n                    \n                        Default value : columnsDisplayCharacter\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:72\n                        \n                    \n\n            \n                \n                    Ids e Displays dos headers das colunas dentro da lista de personagens.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IService[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:44\n                        \n                    \n\n            \n                \n                    Array de IService que serão as services disponíveis dentro do componente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipoDado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:30\n                        \n                    \n\n            \n                \n                    Number, seria o tipo do dado que terá seus detalhes exibidos, sendo eles: 0 = personagem, 1 = local, 2 = episódio. Recebido pela URL (:tipo).\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { columnsDisplayCharacter, columnsDisplayEpisode } from 'src/app/core/consts/columns-display';\nimport { IService } from 'src/app/core/interface/iservice';\nimport { TableHeader } from 'src/app/core/model/table-header.model';\nimport { EpisodiosService } from 'src/app/core/services/episodios.service';\nimport { LocaisService } from 'src/app/core/services/locais.service';\nimport { PersonagensService } from 'src/app/core/services/personagens.service';\n\n/**\n * Componente para mostrar os detalhes do dado recebido pela URL (/detalhes/:tipo/:id)\n *\n * @export\n * @class DetalhesComponent\n * @typedef {DetalhesComponent}\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-detalhes',\n  templateUrl: './detalhes.component.html',\n  styleUrls: ['./detalhes.component.css']\n})\nexport class DetalhesComponent implements OnInit {\n\n  /**\n   * Number, seria o tipo do dado que terá seus detalhes exibidos, sendo eles: 0 = personagem, 1 = local, 2 = episódio. Recebido pela URL (:tipo).\n   *\n   * @type {number}\n   */\n  tipoDado: number = 0;\n\n  /**\n   * Number, id do dado que terá seus detalhes exibidos. Recebido pela URL (:id).\n   *\n   * @type {number}\n   */\n  idDado: number = 0;\n\n  /**\n   * Array de IService que serão as services disponíveis dentro do componente.\n   *\n   * @type {IService[]}\n   */\n  services: IService[] = [];\n\n  /**\n   * Dado que será exibido.\n   *\n   * @type {*}\n   */\n  dado: any;\n  \n  /**\n   * Dados que serão exibidos na lista dentro do dado exibido, podendo ser de personagens ou episódios.\n   *\n   * @type {any[]}\n   */\n  listaSecundaria: any[] = [];\n\n  /**\n   * Ids e Displays dos headers das colunas dentro da lista de episódios.\n   *\n   * @type {TableHeader[]}\n   */\n  episodiosColumns: TableHeader[] = columnsDisplayEpisode;\n\n  /**\n   * Ids e Displays dos headers das colunas dentro da lista de personagens.\n   *\n   * @type {TableHeader[]}\n   */\n  personagensColumns: TableHeader[] = columnsDisplayCharacter;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private personagensService: PersonagensService,\n    private locaisService: LocaisService,\n    private episodiosService: EpisodiosService,\n  ) {\n    this.services[0] = this.personagensService;\n    this.services[1] = this.locaisService;\n    this.services[2] = this.episodiosService;\n  }\n\n  ngOnInit(): void {\n    this.carregarInformacoes();\n  }\n\n  /**\n   * Método que irá carregar as informações do dado que será exibido na tela.\n   */\n  carregarInformacoes() {\n    this.activatedRoute.params.subscribe(\n      params => {\n        this.tipoDado = Number(params['tipo']);\n        this.idDado = Number(params['id']);\n        this.services[this.tipoDado].listarUnico(this.idDado).subscribe(\n          data => {\n            this.dado = data;\n            this.recuperarLista();\n          }\n        )\n      }\n    )\n  }\n\n  /**\n   * Método para redirecionar para outras páginas de detalhes.\n   *\n   * @param {string} url String que receberá a URL que será acessada para carregar o novo dado.\n   * @param {number} tipoDado Number com o tipo do dado que irá ser carregado na nova página.\n   */\n  redirecionar(url: string, tipoDado: number) {\n    this.services[tipoDado].listarUnicoPorUrl(url).subscribe(\n      data => {\n        this.router.navigate([`/detalhes/${tipoDado}/${data.id}`]);\n      }\n    )\n  }\n  \n  /**\n   * Método para carregar a lista secundária do dado\n   */\n  recuperarLista() {\n    this.listaSecundaria = [];\n    switch(this.tipoDado) {\n      case 0:\n        for (let episodio of this.dado.episode) {\n          this.services[this.tipoDado].listarUnicoPorUrl(episodio).subscribe(\n            data => {\n              this.listaSecundaria = this.listaSecundaria.concat(data);\n            }\n          )\n        }\n        break;\n      case 1:\n        for (let residente of this.dado.residents) {\n          this.services[this.tipoDado].listarUnicoPorUrl(residente).subscribe(\n            data => {\n              this.listaSecundaria = this.listaSecundaria.concat(data);\n            }\n          )\n        }\n        break;\n      case 2:\n        for (let personagem of this.dado.characters) {\n          this.services[this.tipoDado].listarUnicoPorUrl(personagem).subscribe(\n            data => {\n              this.listaSecundaria = this.listaSecundaria.concat(data);\n            }\n          )\n        }\n        break;\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n    \n        \n               \n        \n        ID: {{dado.id}}\n        Nome: {{dado.name}}\n        Status: {{dado.status}}\n        Espécie: {{dado.species}}\n        Tipo: {{dado.type}}\n        Genêro: {{dado.gender}}\n        Origem: {{dado.origin.name}}\n        Visto pela última vez em: {{dado.location.name}}\n        Episódios em que aparece:\n        \n    \n\n    \n        ID: {{dado.id}}\n        Nome: {{dado.name}}\n        Tipo: {{dado.type}}\n        Dimensão: {{dado.dimension}}\n        Residentes:\n        \n    \n\n    \n        ID: {{dado.id}}\n        Nome: {{dado.name}}\n        Data de lançamento: {{dado.air_date}}\n        Episódio: {{dado.episode}}\n        Personagens neste episódio:\n        \n    \n    \n\n    \n\n    \n                \n                    ./detalhes.component.css\n                \n                .texto-link {\n    cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                           ID: {{dado.id}}        Nome: {{dado.name}}        Status: {{dado.status}}        Espécie: {{dado.species}}        Tipo: {{dado.type}}        Genêro: {{dado.gender}}        Origem: {{dado.origin.name}}        Visto pela última vez em: {{dado.location.name}}        Episódios em que aparece:                        ID: {{dado.id}}        Nome: {{dado.name}}        Tipo: {{dado.type}}        Dimensão: {{dado.dimension}}        Residentes:                        ID: {{dado.id}}        Nome: {{dado.name}}        Data de lançamento: {{dado.air_date}}        Episódio: {{dado.episode}}        Personagens neste episódio:                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetalhesComponent', 'selector': 'app-detalhes'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListaComponent', 'selector': 'app-lista'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetalhesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EpisodiosService.html":{"url":"injectables/EpisodiosService.html","title":"injectable - EpisodiosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EpisodiosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/episodios.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service para recuperação de dados de episódios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listar\n                            \n                            \n                                listarUnico\n                            \n                            \n                                listarUnicoPorUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/episodios.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listar\n                        \n                    \n                \n            \n            \n                \nlistar(page: number, filtro?: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/episodios.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Método para listagem genérica de episódios.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Pagina a ser consumida.\n\n                                            \n                                        \n                                        \n                                                filtro\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Filtro a ser utilizado no consumo da API.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listarUnico\n                        \n                    \n                \n            \n            \n                \nlistarUnico(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/episodios.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Método para recuperar informações de um único episódio utilizando o ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID do dado que será recuperado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listarUnicoPorUrl\n                        \n                    \n                \n            \n            \n                \nlistarUnicoPorUrl(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/episodios.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Método para recuperar informações de um único episódio utilizando a URL da API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL que será consumida.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/episodios.service.ts:25\n                        \n                    \n\n            \n                \n                    URL da api no enviroment atual.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { IService } from '../interface/iservice';\n\n/**\n * Service para recuperação de dados de episódios.\n *\n * @export\n * @class EpisodiosService\n * @typedef {EpisodiosService}\n * @implements {IService}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EpisodiosService implements IService{\n\n  /**\n   * URL da api no enviroment atual.\n   *\n   * @type {string}\n   */\n  apiUrl: string = environment.apiUrl;\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  /**\n   * Método para listagem genérica de episódios.\n   *\n   * @param {number} page Pagina a ser consumida.\n   * @param {?String} [filtro] Filtro a ser utilizado no consumo da API.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listar (page: number, filtro?: String): Observable {\n    if (filtro) {\n      return this.httpClient.get(`${this.apiUrl}/episode/?page=${page}&name=${filtro}`);\n    } else {\n      return this.httpClient.get(`${this.apiUrl}/episode/?page=${page}`);\n    }\n  }\n\n  /**\n   * Método para recuperar informações de um único episódio utilizando o ID.\n   *\n   * @param {number} id ID do dado que será recuperado.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listarUnico (id: number): Observable {\n    return this.httpClient.get(`${this.apiUrl}/episode/${id}`);\n  }\n\n  /**\n   * Método para recuperar informações de um único episódio utilizando a URL da API.\n   *\n   * @param {string} url URL que será consumida.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listarUnicoPorUrl (url: string): Observable {\n    return this.httpClient.get(url);\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para o Header da aplicação\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Componente para o Header da aplicação\n *\n * @export\n * @class HeaderComponent\n * @typedef {HeaderComponent}\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n\n}\n\n    \n\n    \n        \n\n\n    Rick & Morty Angular\n\n\n\n    Listagem\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                .toolbar-link {\n    cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Rick & Morty Angular    Listagem'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetalhesComponent', 'selector': 'app-detalhes'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListaComponent', 'selector': 'app-lista'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para a página principal da aplicação.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                episodiosColumns\n                            \n                            \n                                episodiosDados\n                            \n                            \n                                filtro\n                            \n                            \n                                finalPage\n                            \n                            \n                                locaisColumns\n                            \n                            \n                                locaisDados\n                            \n                            \n                                page\n                            \n                            \n                                personagensColumns\n                            \n                            \n                                personagensDados\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                changeSelectedTab\n                            \n                            \n                                listar\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                scroll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(personagensService: PersonagensService, locaisService: LocaisService, episodiosService: EpisodiosService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.component.ts:91\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        personagensService\n                                                  \n                                                        \n                                                                        PersonagensService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locaisService\n                                                  \n                                                        \n                                                                        LocaisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        episodiosService\n                                                  \n                                                        \n                                                                        EpisodiosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:173\n                        \n                    \n\n\n            \n                \n                        Método acionado quando o filtro é atualizado, limpando os dados atuais e consumindo os novos com a nova pesquisa.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeSelectedTab\n                        \n                    \n                \n            \n            \n                \nchangeSelectedTab(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:187\n                        \n                    \n\n\n            \n                \n                        Método acionado quando a tab é atualizada. Quando o selected está numa lista, as outras não são carregadas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listar\n                        \n                    \n                \n            \n            \n                \nlistar(tipoDado: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Método para consumir os dados da API e preencher os dados na aplicação.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tipoDado\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number que receberá o tipo de dado que deve ser preenchido, sendo 0 = personagem, 1 = local, 2 = episodio\n\n                                            \n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number com a página atual da listagem\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scroll\n                        \n                    \n                \n            \n            \n                \nscroll(tipoDado: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:196\n                        \n                    \n\n\n            \n                \n                        Método acionado quando o componente de lista disparar um scroll. Carrega novos dados, caso hajam, e adicionam a lista.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tipoDado\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number que receberá o tipo de dado que deve ser preenchido, sendo 0 = personagem, 1 = local, 2 = episodio\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        episodiosColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableHeader[]\n\n                    \n                \n                \n                    \n                        Default value : columnsDisplayEpisode\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:84\n                        \n                    \n\n            \n                \n                    Ids e Displays dos headers das colunas dentro da lista de episodios.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        episodiosDados\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:77\n                        \n                    \n\n            \n                \n                    Dados que serão exibidos na lista de episodios.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:91\n                        \n                    \n\n            \n                \n                    String que receberá o valor do filtro para realizar a filtragem nos dados da lista.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finalPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [ 0, 0, 0 ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:42\n                        \n                    \n\n            \n                \n                    Array para guardar a página final da lista na hora da paginação.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locaisColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableHeader[]\n\n                    \n                \n                \n                    \n                        Default value : columnsDisplayLocation\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:70\n                        \n                    \n\n            \n                \n                    Ids e Displays dos headers das colunas dentro da lista de locais.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locaisDados\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:63\n                        \n                    \n\n            \n                \n                    Dados que serão exibidos na lista de locais.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [ 1, 1, 1 ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:35\n                        \n                    \n\n            \n                \n                    Array para a contagem da paginação das listas.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personagensColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableHeader[]\n\n                    \n                \n                \n                    \n                        Default value : columnsDisplayCharacter\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:56\n                        \n                    \n\n            \n                \n                    Ids e Displays dos headers das colunas dentro da lista de personagens.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personagensDados\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:49\n                        \n                    \n\n            \n                \n                    Dados que serão exibidos na lista de personagens.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:28\n                        \n                    \n\n            \n                \n                    Tab selecionado dentro da aplicação.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { columnsDisplayCharacter, columnsDisplayEpisode, columnsDisplayLocation } from 'src/app/core/consts/columns-display';\nimport { TableHeader } from 'src/app/core/model/table-header.model';\nimport { EpisodiosService } from 'src/app/core/services/episodios.service';\nimport { LocaisService } from 'src/app/core/services/locais.service';\nimport { PersonagensService } from 'src/app/core/services/personagens.service';\n\n/**\n * Componente para a página principal da aplicação.\n *\n * @export\n * @class HomeComponent\n * @typedef {HomeComponent}\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  /**\n   * Tab selecionado dentro da aplicação.\n   *\n   * @type {number}\n   */\n  selected: number = 0;\n\n  /**\n   * Array para a contagem da paginação das listas.\n   *\n   * @type {number[]}\n   */\n  page: number[] = [ 1, 1, 1 ];\n\n  /**\n   * Array para guardar a página final da lista na hora da paginação.\n   *\n   * @type {number[]}\n   */\n  finalPage: number[] = [ 0, 0, 0 ];\n\n  /**\n   * Dados que serão exibidos na lista de personagens.\n   *\n   * @type {any[]}\n   */\n  personagensDados: any[] = [];\n\n  /**\n   * Ids e Displays dos headers das colunas dentro da lista de personagens.\n   *\n   * @type {TableHeader[]}\n   */\n  personagensColumns: TableHeader[] = columnsDisplayCharacter;\n\n  /**\n   * Dados que serão exibidos na lista de locais.\n   *\n   * @type {any[]}\n   */\n  locaisDados: any[] = [];\n\n  /**\n   * Ids e Displays dos headers das colunas dentro da lista de locais.\n   *\n   * @type {TableHeader[]}\n   */\n  locaisColumns: TableHeader[] = columnsDisplayLocation;\n\n  /**\n   * Dados que serão exibidos na lista de episodios.\n   *\n   * @type {any[]}\n   */\n  episodiosDados: any[] = [];\n\n  /**\n   * Ids e Displays dos headers das colunas dentro da lista de episodios.\n   *\n   * @type {TableHeader[]}\n   */\n  episodiosColumns: TableHeader[] = columnsDisplayEpisode\n\n  /**\n   * String que receberá o valor do filtro para realizar a filtragem nos dados da lista.\n   *\n   * @type {String}\n   */\n  filtro: String = \"\";\n\n  constructor(\n    private personagensService: PersonagensService,\n    private locaisService: LocaisService,\n    private episodiosService: EpisodiosService,\n  ) { }\n\n  ngOnInit(): void {\n    this.listar(0, 1);\n    this.listar(1, 1);\n    this.listar(2, 1);\n  }\n\n  /**\n   * Método para consumir os dados da API e preencher os dados na aplicação.\n   *\n   * @param {number} tipoDado Number que receberá o tipo de dado que deve ser preenchido, sendo 0 = personagem, 1 = local, 2 = episodio\n   * @param {number} page Number com a página atual da listagem\n   */\n  listar (tipoDado: number, page: number) {\n    console.log(`LISTANDO, TIPO: ${tipoDado}, PÁGINA: ${page}/${this.finalPage[tipoDado]}`)\n    switch(tipoDado){\n      case 0:\n        if (this.filtro != \"\") {\n          this.personagensService.listar(page, this.filtro).subscribe(\n            data => {\n              this.personagensDados = this.personagensDados.concat(data.results);\n              this.finalPage[tipoDado] = data.info.pages;\n            }\n          );\n        } else {\n          this.personagensService.listar(page).subscribe(\n            data => {\n              this.personagensDados = this.personagensDados.concat(data.results);\n              this.finalPage[tipoDado] = data.info.pages;\n            }\n          ); \n        }\n        break;\n      case 1:\n        if (this.filtro != \"\") {\n          this.locaisService.listar(page, this.filtro).subscribe(\n            data => {\n              this.locaisDados = this.locaisDados.concat(data.results);\n              this.finalPage[tipoDado] = data.info.pages;\n            }\n          );\n        } else {\n          this.locaisService.listar(page).subscribe(\n            data => {\n              this.locaisDados = this.locaisDados.concat(data.results);\n              this.finalPage[tipoDado] = data.info.pages;\n            }\n          ); \n        }\n        break;\n      case 2:\n        if (this.filtro != \"\") {\n          this.episodiosService.listar(page, this.filtro).subscribe(\n            data => {\n              this.episodiosDados = this.episodiosDados.concat(data.results);\n              this.finalPage[tipoDado] = data.info.pages;\n            }\n          );\n        } else {\n          this.episodiosService.listar(page).subscribe(\n            data => {\n              this.episodiosDados = this.episodiosDados.concat(data.results);\n              this.finalPage[tipoDado] = data.info.pages;\n            }\n          ); \n        }\n        break;\n    }\n  }\n\n  /**\n   * Método acionado quando o filtro é atualizado, limpando os dados atuais e consumindo os novos com a nova pesquisa.\n   *\n   * @param {*} e\n   */\n  applyFilter(e: any) {\n    this.filtro = e.target.value;\n    this.page = [ 1, 1, 1 ];\n    this.personagensDados = [];\n    this.locaisDados = [];\n    this.episodiosDados = [];\n    this.listar(this.selected, this.page[this.selected]);\n  }\n\n  /**\n   * Método acionado quando a tab é atualizada. Quando o selected está numa lista, as outras não são carregadas\n   *\n   * @param {*} e\n   */\n  changeSelectedTab (e: any) {\n    this.selected = e;\n  }\n\n  /**\n   * Método acionado quando o componente de lista disparar um scroll. Carrega novos dados, caso hajam, e adicionam a lista.\n   *\n   * @param {number} tipoDado Number que receberá o tipo de dado que deve ser preenchido, sendo 0 = personagem, 1 = local, 2 = episodio\n   */\n  scroll(tipoDado: number) {\n    console.log(`Scrollando (${tipoDado})...`)\n    if (this.page[tipoDado] \n    \n\n    \n        \n\n\n\n    \n\n    \n        Pesquisar\n        \n    \n\n    \n\n    \n         \n                \n        \n         \n            \n        \n         \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Pesquisar                                                                                                                   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetalhesComponent', 'selector': 'app-detalhes'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListaComponent', 'selector': 'app-lista'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IService.html":{"url":"interfaces/IService.html","title":"interface - IService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interface/iservice.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            listar\n                                        \n                                \n                                \n                                        \n                                            listarUnico\n                                        \n                                \n                                \n                                        \n                                            listarUnicoPorUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        listar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listar:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listarUnico\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listarUnico:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listarUnicoPorUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listarUnicoPorUrl:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\n// Interface para as services utilizadas na aplicação\n\nexport interface IService {\n    listar: (page: number, filtro?: String) => Observable\n    listarUnico: (id: number) => Observable\n    listarUnicoPorUrl: (url: string) => Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListaComponent.html":{"url":"components/ListaComponent.html","title":"component - ListaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/lista/lista.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para listagem.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lista\n            \n\n\n\n            \n                styleUrls\n                ./lista.component.css\n            \n\n\n\n            \n                templateUrl\n                ./lista.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnsToDisplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                abrirDetalhes\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTableScroll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                tipoDado\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                scrollFimPagina\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/lista/lista.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/lista/lista.component.ts:39\n                            \n                        \n                \n                    \n                        Dados que serão exibidos na tabela.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        displayedColumns\n                    \n                \n                \n                    \n                        Type :         TableHeader[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/lista/lista.component.ts:25\n                            \n                        \n                \n                    \n                        Array de TableHeader, seriam as colunas da tabela, sendo que id é o valor que que puxará os valores da API e display que será o valor que será mostrado no header da coluna.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tipoDado\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/lista/lista.component.ts:32\n                            \n                        \n                \n                    \n                        Seria o tipo do dado que a lista está exibindo, sendo eles: 0 = personagem, 1 = local, 2 = episódio.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        scrollFimPagina\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/lista/lista.component.ts:46\n                            \n                        \n                \n                    \n                        EventEmitter que será disparado ao componente pai quando a tabela chegar no fim de seu scroll.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        abrirDetalhes\n                        \n                    \n                \n            \n            \n                \nabrirDetalhes(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/lista/lista.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Resgate dos dados da API para consumo da tabela, utilizando a service passada pelo\ninput do componente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID do dado que fora clicado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/lista/lista.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTableScroll\n                        \n                    \n                \n            \n            \n                \nonTableScroll(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/lista/lista.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Método acionado em todo scroll até o final da tabela, carregando a próxima página caso\na visualização esteja no final da tabela e a página atual não seja a última. Possibilita o\nscroll infinito.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columnsToDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     String[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/lista/lista.component.ts:53\n                        \n                    \n\n            \n                \n                    Mapeamento das colunas para utilização no HTML\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TableHeader } from 'src/app/core/model/table-header.model';\n\n/**\n * Componente para listagem.\n *\n * @export\n * @class ListaComponent\n * @typedef {ListaComponent}\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.css']\n})\nexport class ListaComponent implements OnInit {\n\n  /**\n   * Array de TableHeader, seriam as colunas da tabela, sendo que id é o valor que que puxará os valores da API e display que será o valor que será mostrado no header da coluna.\n   *\n   * @type {!TableHeader[]}\n   */\n  @Input() displayedColumns!: TableHeader[];\n\n  /**\n   * Seria o tipo do dado que a lista está exibindo, sendo eles: 0 = personagem, 1 = local, 2 = episódio.\n   *\n   * @type {!number}\n   */\n  @Input() tipoDado!: number;\n\n  /**\n   * Dados que serão exibidos na tabela.\n   *\n   * @type {!any[]}\n   */\n  @Input() data!: any[];\n\n  /**\n   * EventEmitter que será disparado ao componente pai quando a tabela chegar no fim de seu scroll.\n   *\n   * @type {*}\n   */\n  @Output() scrollFimPagina = new EventEmitter();\n\n  /**\n   * Mapeamento das colunas para utilização no HTML\n   *\n   * @type {String[]}\n   */\n  columnsToDisplay: String[] = [];\n\n  constructor (\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    // Mapping realizado no OnInit pois não é possível realizá-lo diretamente no destino (HTML)\n    this.columnsToDisplay = this.displayedColumns.map((column) => (column).id);\n  }\n\n  /**\n   * Método acionado em todo scroll até o final da tabela, carregando a próxima página caso\n   * a visualização esteja no final da tabela e a página atual não seja a última. Possibilita o\n   * scroll infinito.\n   *\n   * @param {*} e\n   */\n  onTableScroll(e: any) {\n    const tableViewHeight = e.target.offsetHeight;\n    const tableScrollHeight = e.target.scrollHeight;\n    const scrollLocation = e.target.scrollTop;\n    \n    // Buffer de 200px para o scroll até o final da página\n    const buffer = 200;\n    const limit = tableScrollHeight - tableViewHeight - buffer;\n    if (scrollLocation > limit) {\n      this.scrollFimPagina.emit(this.tipoDado);\n    }\n  }\n\n  /**\n   * Resgate dos dados da API para consumo da tabela, utilizando a service passada pelo \n   * input do componente.\n   *\n   * @param {number} id ID do dado que fora clicado.\n   */\n  abrirDetalhes(id: number) {\n    this.router.navigate([`detalhes/${this.tipoDado}/${id}`]);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n    \n        \n        \n        \n             {{column.display}} \n             {{dado[column.id]}} \n        \n\n        \n        \n\n    \n\n\n    \n\n    \n                \n                    ./lista.component.css\n                \n                mat-table {\n    display: table;\n}\n\n.table-lista {\n    height: 600px;\n    overflow: auto;\n}\n\n\n.mat-mdc-row .mat-mdc-cell {\n    border-bottom: 1px solid transparent;\n    border-top: 1px solid transparent;\n    cursor: pointer;\n}\n\n.mat-mdc-row:hover .mat-mdc-cell {\n    border-color: currentColor;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                         {{column.display}}              {{dado[column.id]}}                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetalhesComponent', 'selector': 'app-detalhes'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListaComponent', 'selector': 'app-lista'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaisService.html":{"url":"injectables/LocaisService.html","title":"injectable - LocaisService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocaisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/locais.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service para recuperação de dados de locais.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listar\n                            \n                            \n                                listarUnico\n                            \n                            \n                                listarUnicoPorUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/locais.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listar\n                        \n                    \n                \n            \n            \n                \nlistar(page: number, filtro?: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/locais.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Método para listagem genérica de locais.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Pagina a ser consumida.\n\n                                            \n                                        \n                                        \n                                                filtro\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Filtro a ser utilizado no consumo da API.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listarUnico\n                        \n                    \n                \n            \n            \n                \nlistarUnico(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/locais.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Método para recuperar informações de um único local utilizando o ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID do dado que será recuperado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listarUnicoPorUrl\n                        \n                    \n                \n            \n            \n                \nlistarUnicoPorUrl(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/locais.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Método para recuperar informações de um único local utilizando a URL da API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL que será consumida.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/locais.service.ts:26\n                        \n                    \n\n            \n                \n                    URL da api no enviroment atual.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { IService } from '../interface/iservice';\n\n/**\n * Service para recuperação de dados de locais.\n * @date 11/16/2023 - 2:35:10 AM\n *\n * @export\n * @class LocaisService\n * @typedef {LocaisService}\n * @implements {IService}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocaisService implements IService {\n\n  /**\n   * URL da api no enviroment atual.\n   *\n   * @type {string}\n   */\n  apiUrl: string = environment.apiUrl;\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  /**\n   * Método para listagem genérica de locais.\n   *\n   * @param {number} page Pagina a ser consumida.\n   * @param {?String} [filtro] Filtro a ser utilizado no consumo da API.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listar (page: number, filtro?: String): Observable {\n    if (filtro) {\n      return this.httpClient.get(`${this.apiUrl}/location/?page=${page}&name=${filtro}`);\n    } else {\n      return this.httpClient.get(`${this.apiUrl}/location/?page=${page}`);\n    }\n  }\n\n  /**\n   * Método para recuperar informações de um único local utilizando o ID.\n   *\n   * @param {number} id ID do dado que será recuperado.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listarUnico (id: number): Observable {\n    return this.httpClient.get(`${this.apiUrl}/location/${id}`);\n  }\n\n  /**\n   * Método para recuperar informações de um único local utilizando a URL da API.\n   *\n   * @param {string} url URL que será consumida.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listarUnicoPorUrl (url: string): Observable {\n    return this.httpClient.get(url);\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonagensService.html":{"url":"injectables/PersonagensService.html","title":"injectable - PersonagensService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonagensService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/personagens.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service para recuperação de dados de personagens.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listar\n                            \n                            \n                                listarUnico\n                            \n                            \n                                listarUnicoPorUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/personagens.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listar\n                        \n                    \n                \n            \n            \n                \nlistar(page: number, filtro?: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/personagens.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Método para listagem genérica de personagens.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Pagina a ser consumida.\n\n                                            \n                                        \n                                        \n                                                filtro\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Filtro a ser utilizado no consumo da API.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listarUnico\n                        \n                    \n                \n            \n            \n                \nlistarUnico(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/personagens.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Método para recuperar informações de um único personagem utilizando o ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID do dado que será recuperado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listarUnicoPorUrl\n                        \n                    \n                \n            \n            \n                \nlistarUnicoPorUrl(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/personagens.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Método para recuperar informações de um único personagem utilizando a URL da API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL que será consumida.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/personagens.service.ts:25\n                        \n                    \n\n            \n                \n                    URL da api no enviroment atual.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { IService } from '../interface/iservice';\n\n/**\n * Service para recuperação de dados de personagens.\n *\n * @export\n * @class PersonagensService\n * @typedef {PersonagensService}\n * @implements {IService}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonagensService implements IService {\n\n  /**\n   * URL da api no enviroment atual.\n   *\n   * @type {string}\n   */\n  apiUrl: string = environment.apiUrl;\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  /**\n   * Método para listagem genérica de personagens.\n   *\n   * @param {number} page Pagina a ser consumida.\n   * @param {?String} [filtro] Filtro a ser utilizado no consumo da API.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listar (page: number, filtro?: String): Observable {\n    if (filtro) {\n      return this.httpClient.get(`${this.apiUrl}/character/?page=${page}&name=${filtro}`);\n    } else {\n      return this.httpClient.get(`${this.apiUrl}/character/?page=${page}`);\n    }\n  }\n\n  /**\n   * Método para recuperar informações de um único personagem utilizando o ID.\n   *\n   * @param {number} id ID do dado que será recuperado.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listarUnico (id: number): Observable {\n    return this.httpClient.get(`${this.apiUrl}/character/${id}`);\n  }\n\n  /**\n   * Método para recuperar informações de um único personagem utilizando a URL da API.\n   *\n   * @param {string} url URL que será consumida.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listarUnicoPorUrl (url: string): Observable {\n    return this.httpClient.get(url);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableHeader.html":{"url":"interfaces/TableHeader.html","title":"interface - TableHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/table-header.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            display\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TableHeader {\n    id: string;\n    display: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/consts/columns-display.ts\n            \n            variable\n            columnsDisplayCharacter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/consts/columns-display.ts\n            \n            variable\n            columnsDisplayEpisode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/consts/columns-display.ts\n            \n            variable\n            columnsDisplayLocation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interface/iservice.ts\n            \n            interface\n            IService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/model/table-header.model.ts\n            \n            interface\n            TableHeader\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/episodios.service.ts\n            \n            injectable\n            EpisodiosService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/core/services/locais.service.ts\n            \n            injectable\n            LocaisService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/core/services/personagens.service.ts\n            \n            injectable\n            PersonagensService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/pages/detalhes/detalhes.component.ts\n            \n            component\n            DetalhesComponent\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/lista/lista.component.ts\n            \n            component\n            ListaComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.0.0\n        \n            @angular/cdk : ^16.2.12\n        \n            @angular/common : ^16.0.0\n        \n            @angular/compiler : ^16.0.0\n        \n            @angular/core : ^16.0.0\n        \n            @angular/forms : ^16.0.0\n        \n            @angular/material : ^16.2.12\n        \n            @angular/platform-browser : ^16.0.0\n        \n            @angular/platform-browser-dynamic : ^16.0.0\n        \n            @angular/router : ^16.0.0\n        \n            bootstrap : ^5.3.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nFrontendRickemorty\nThis project was generated with Angular CLI version 16.0.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDetalhesComponent\n\nDetalhesComponent\n\nAppModule -->\n\nDetalhesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nListaComponent\n\nListaComponent\n\nAppModule -->\n\nListaComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            columnsDisplayCharacter   (src/.../columns-display.ts)\n                        \n                        \n                            columnsDisplayEpisode   (src/.../columns-display.ts)\n                        \n                        \n                            columnsDisplayLocation   (src/.../columns-display.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/consts/columns-display.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        columnsDisplayCharacter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { id: \"id\", display: \"ID\" },\n    { id: \"name\", display: \"Nome\" },\n    { id: \"status\", display: \"Status\" },\n    { id: \"species\", display: \"Espécie\" },\n    { id: \"gender\", display: \"Genêro\" },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsDisplayEpisode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { id: \"id\", display: \"ID\" },\n    { id: \"name\", display: \"Nome\" },\n    { id: \"air_date\", display: \"Data de lançamento\" },\n    { id: \"episode\", display: \"Episódio\" },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsDisplayLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { id: \"id\", display: \"ID\" },\n    { id: \"name\", display: \"Nome\" },\n    { id: \"type\", display: \"Tipo\" },\n    { id: \"dimension\", display: \"Dimensão\" },\n]\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    apiUrl: \"https://rickandmortyapi.com/api\"\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    apiUrl: \"https://rickandmortyapi.com/api\"\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
