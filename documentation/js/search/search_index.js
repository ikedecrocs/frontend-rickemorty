var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.539,1,0.824]],["body/components/AppComponent.html",[0,0.93,1,1.491,2,1.924,3,0.679,4,0.679,5,1.753,6,1.753,7,1.753,8,1.753,9,0.578,10,2.784,11,1.753,12,2.686,13,2.351,14,2.528,15,2.198,16,4.731,17,2.198,18,4.33,19,0.788,20,0.988,21,4.731,22,0.788,23,0.051,24,1.038,25,1.183,26,1.183,27,4.33,28,4.33,29,1.347,30,3.453,31,0.788,32,0.788,33,0.679,34,0.907,35,1.347,36,2.198,37,2.198,38,1.753,39,2.518,40,1.753,41,1.302,42,1.753,43,0.907,44,1.753,45,1.038,46,1.753,47,0.907,48,1.753,49,1.038,50,1.753,51,1.753,52,1.753,53,0.04,54,0.04]],["title/modules/AppModule.html",[55,1.6,56,1.6]],["body/modules/AppModule.html",[1,1.613,3,0.576,4,0.576,9,0.491,13,1.302,23,0.052,31,1.243,32,0.669,33,0.576,34,0.77,35,1.143,43,1.311,45,1.5,47,1.311,49,1.5,53,0.036,54,0.036,55,1.711,56,3.204,57,1.488,58,1.711,59,3.528,60,2.97,61,3.141,62,1.99,63,2.363,64,2.363,65,2.363,66,2.363,67,2.533,68,3.141,69,2.363,70,2.363,71,2.931,72,3.141,73,3.141,74,3.895,75,3.141,76,1.99,77,2.931,78,2.931,79,2.931,80,2.363,81,3.895,82,1.711,83,3.895,84,2.931,85,3.895,86,2.931,87,3.895,88,2.931,89,3.895,90,2.931,91,2.931,92,3.895,93,2.931,94,2.363,95,3.895,96,2.931,97,2.931]],["title/modules/AppRoutingModule.html",[55,1.6,67,1.392]],["body/modules/AppRoutingModule.html",[0,0.897,3,0.738,4,0.738,9,0.629,23,0.052,31,1.166,32,0.857,33,0.738,34,0.986,43,1.198,47,1.198,53,0.042,54,0.042,57,1.906,62,2.55,67,2.315,72,3.028,73,3.678,80,3.028,94,3.028,98,3.755,99,3.755,100,4.561,101,2.867,102,2.192,103,3.028,104,4.912,105,3.028,106,3.678,107,3.755,108,3.755,109,3.755,110,3.755]],["title/components/DetalhesComponent.html",[0,0.539,43,0.72]],["body/components/DetalhesComponent.html",[0,0.523,1,0.384,2,0.93,3,0.251,4,0.251,5,0.648,6,0.648,7,0.648,8,0.648,9,0.214,11,0.648,12,1.956,13,1.712,15,1.062,17,1.062,19,0.291,20,0.477,22,1.084,23,0.052,24,1.097,25,1.25,26,1.25,29,1.748,31,0.918,32,0.291,33,0.411,34,0.55,35,0.498,36,1.062,37,1.062,38,0.648,39,1.562,40,0.648,41,0.925,42,0.648,43,0.958,44,0.648,45,0.384,46,0.648,47,0.335,48,0.648,49,0.384,50,2.114,51,0.648,52,0.648,53,0.019,54,0.019,102,0.745,105,1.688,111,1.029,112,0.816,113,1.796,114,1.288,115,2.093,116,1.421,117,4.285,118,2.207,119,3.648,120,4.022,121,2.175,122,1.182,123,2.089,124,2.66,125,2.093,126,2.145,127,2.66,128,2.66,129,2.145,130,2.738,131,2.616,132,0.93,133,3.076,134,2.089,135,3.076,136,3.076,137,0.93,138,1.276,139,3.648,140,3.107,141,1.956,142,1.956,143,1.956,144,2.093,145,0.93,146,0.93,147,1.276,148,1.621,149,1.951,150,3.076,151,3.648,152,1.221,153,1.904,154,3.648,155,1.852,156,2.093,157,1.367,158,2.305,159,1.276,160,1.276,161,2.093,162,2.093,163,1.854,164,1.276,165,1.688,166,2.093,167,1.536,168,1.688,169,2.093,170,1.25,171,2.093,172,1.062,173,2.501,174,2.093,175,1.688,176,1.421,177,1.276,178,1.712,179,1.552,180,1.276,181,2.481,182,1.796,183,2.481,184,2.089,185,2.481,186,2.089,187,2.089,188,3.243,189,1.2,190,2.942,191,2.249,192,1.276,193,1.469,194,3.076,195,3.076,196,2.477,197,1.276,198,0.93,199,2.089,200,2.093,201,2.477,202,2.093,203,1.552,204,1.423,205,1.276,206,1.421,207,2.093,208,1.276,209,1.688,210,1.421,211,1.688,212,1.552,213,1.552,214,1.221,215,1.35,216,2.129,217,1.029,218,0.745,219,0.648,220,1.276,221,0.648,222,0.867,223,1.029,224,1.029,225,1.029,226,0.498,227,1.509,228,1.276,229,1.276,230,1.276,231,1.276,232,1.276,233,1.276,234,1.276,235,1.276,236,1.276,237,1.276,238,1.276,239,1.276,240,1.276,241,1.276,242,2.348,243,1.276,244,1.276,245,0.93,246,1.276,247,1.276,248,3.076,249,1.276,250,2.145,251,1.029,252,1.276,253,1.276,254,2.66,255,2.145,256,1.276,257,1.276,258,1.276,259,1.276,260,1.276,261,3.648,262,2.942,263,3.648,264,1.688,265,2.093,266,1.688,267,2.093,268,3.076,269,1.688,270,2.093,271,2.093,272,2.093,273,2.093,274,1.688,275,2.093,276,2.481,277,2.093,278,2.093,279,1.688,280,2.093,281,2.093,282,1.688,283,2.093,284,2.093,285,2.093,286,1.276,287,1.029,288,0.867,289,0.867]],["title/injectables/EpisodiosService.html",[143,1.392,290,1.069]],["body/injectables/EpisodiosService.html",[3,0.425,4,0.425,9,0.362,14,1.261,19,0.493,20,0.719,22,1.034,23,0.052,24,1.513,25,0.74,26,0.74,29,1.694,31,0.991,32,0.493,33,0.619,34,0.827,41,1.227,53,0.029,54,0.029,82,1.261,112,1.593,114,1.441,118,1.399,121,2.482,122,1.399,132,1.399,137,1.399,143,2.073,145,1.815,146,1.815,148,2.014,149,1.593,152,2.384,153,2.131,157,2.014,163,1.871,167,1.703,170,1.643,172,2.301,189,1.986,190,3.293,193,1.603,198,1.399,204,1.45,216,2.384,226,0.843,227,0.96,245,1.815,290,1.229,291,1.261,292,1.742,293,1.838,294,2.138,295,2.169,296,1.886,297,2.169,298,2.169,299,1.467,300,3.077,301,3.149,302,1.467,303,2.375,304,2.16,305,1.399,306,2.138,307,1.886,308,2.138,309,2.772,310,1.467,311,2.138,312,1.838,313,2.014,314,3.066,315,3.077,316,2.645,317,1.467,318,2.16,319,2.772,320,2.073,321,2.772,322,2.073,323,2.138,324,1.467,325,2.16,326,2.138,327,2.138,328,1.599,329,1.097,330,1.097,331,1.467,332,1.467,333,1.467,334,2.772,335,2.16,336,2.16,337,2.16,338,1.467]],["title/components/HeaderComponent.html",[0,0.539,45,0.824]],["body/components/HeaderComponent.html",[0,0.911,1,0.991,2,1.87,3,0.648,4,0.648,5,1.675,6,1.675,7,1.675,8,1.675,9,0.552,11,1.675,12,2.659,13,2.327,15,2.136,17,2.136,23,0.051,31,0.753,32,0.753,33,0.827,34,1.105,35,1.287,36,2.136,37,2.136,38,1.675,39,2.477,40,1.675,41,1.265,42,1.675,43,0.866,44,1.675,45,1.549,46,1.675,47,0.866,48,1.675,49,0.991,50,1.675,51,1.675,52,1.675,53,0.038,54,0.038,112,1.287,113,2.456,114,1.265,170,1.442,189,1.641,226,1.287,287,2.66,288,2.24,289,2.24,305,1.87,339,2.66,340,3.934,341,2.856,342,4.632,343,4.207,344,3.393,345,3.393,346,3.393,347,3.299]],["title/components/HomeComponent.html",[0,0.539,47,0.72]],["body/components/HomeComponent.html",[0,0.459,1,0.32,2,0.799,3,0.209,4,0.209,5,0.54,6,0.54,7,0.54,8,0.54,9,0.178,11,0.54,12,1.801,13,1.577,15,0.913,17,0.913,19,0.243,20,0.41,22,1.124,23,0.052,24,0.923,25,1.377,26,1.377,29,1.772,31,0.76,32,0.243,33,0.354,34,0.472,35,0.415,36,0.913,37,0.913,38,0.54,39,1.394,40,0.54,41,1.242,42,0.54,43,0.28,44,0.54,45,0.32,46,0.54,47,0.875,48,0.54,49,0.32,50,2.469,51,0.54,52,0.54,53,0.016,54,0.016,106,1.451,112,0.912,113,1.603,114,1.324,116,2.532,118,1.657,122,1.038,123,1.865,126,1.884,129,1.884,131,2.409,132,0.799,134,1.865,137,0.799,141,1.692,142,1.801,143,1.801,145,1.364,146,1.364,148,1.657,149,1.772,153,1.221,155,2.039,157,1.364,158,2.262,163,1.944,165,1.451,167,1.655,168,2.687,170,1.556,172,1.394,173,2.267,175,1.451,176,2.409,178,1.785,179,1.364,181,2.687,182,2.717,183,2.687,184,2.262,185,2.687,186,2.532,187,2.262,188,3.007,189,1.934,191,2.524,196,2.262,198,2.018,199,2.262,201,1.865,203,1.364,206,1.865,210,1.865,212,1.603,213,2.685,214,1.603,215,1.559,218,0.621,219,0.54,221,0.54,222,0.723,223,0.858,224,0.858,225,0.858,226,0.415,227,1.038,242,1.945,245,1.364,250,1.884,251,2.215,255,1.884,296,1.186,303,1.801,305,0.799,307,1.801,313,1.481,316,1.05,320,0.913,328,0.913,341,2.262,348,0.858,349,1.799,350,2.336,351,1.799,352,2.336,353,2.336,354,2.336,355,2.336,356,2.336,357,3.07,358,1.799,359,2.336,360,2.215,361,1.064,362,1.799,363,1.799,364,1.064,365,2.687,366,3.007,367,1.799,368,1.799,369,1.799,370,1.799,371,2.747,372,2.747,373,2.747,374,3.332,375,2.747,376,2.747,377,1.064,378,1.064,379,2.747,380,1.799,381,1.451,382,1.799,383,1.451,384,1.799,385,1.799,386,1.064,387,1.064,388,1.799,389,1.799,390,2.747,391,2.747,392,1.064,393,1.799,394,1.064,395,1.799,396,1.799,397,1.221,398,1.799,399,1.799,400,1.064,401,2.747,402,1.064,403,1.451,404,1.799,405,1.799,406,1.064,407,1.799,408,1.451,409,1.799,410,2.747,411,1.586,412,1.064,413,2.215,414,1.064,415,1.064,416,1.799,417,1.799,418,1.064,419,1.064,420,1.064,421,1.799,422,1.064,423,1.064,424,1.064,425,1.064,426,1.064,427,1.064,428,2.747,429,1.064,430,2.336,431,2.336,432,1.799,433,3.332,434,3.332,435,1.064,436,1.064,437,2.336,438,1.799,439,1.064,440,1.064,441,2.336,442,1.799,443,1.064,444,1.064,445,1.064,446,1.064,447,1.064,448,1.064,449,1.064,450,1.064,451,1.799]],["title/interfaces/IService.html",[204,1.069,452,1.392]],["body/interfaces/IService.html",[3,0.737,4,0.737,9,0.627,19,0.855,20,1.039,22,1.12,23,0.051,24,1.369,31,0.855,33,0.737,53,0.042,54,0.042,114,1.126,121,1.902,130,3.021,155,1.902,163,1.777,193,1.284,204,1.777,296,2.591,297,2.98,298,2.98,303,1.902,307,1.902,314,2.98,329,1.902,341,2.544,452,2.312,453,2.544,454,3.021,455,5.319,456,3.747]],["title/components/ListaComponent.html",[0,0.539,49,0.824]],["body/components/ListaComponent.html",[0,0.6,1,0.471,2,1.096,3,0.308,4,0.308,5,0.795,6,0.795,7,0.795,8,0.795,9,0.262,11,0.795,12,2.125,13,1.86,15,1.252,17,1.252,19,0.357,20,0.563,22,1.096,23,0.052,24,0.917,25,0.537,26,0.537,29,1.741,31,0.696,32,0.357,33,0.485,34,0.648,35,0.611,36,1.912,37,1.252,38,0.795,39,1.758,40,0.795,41,1.132,42,0.795,43,0.411,44,0.795,45,0.471,46,0.795,47,0.411,48,0.795,49,1.203,50,2.031,51,0.795,52,0.795,53,0.023,54,0.023,102,0.914,103,3.037,112,0.962,113,2.335,114,1.258,116,1.675,118,1.539,122,1.356,123,2.557,131,2.072,132,1.096,134,2.351,137,1.096,140,3.226,145,1.356,146,1.356,148,1.096,149,1.969,153,1.778,155,1.252,157,1.356,158,2.351,163,1.633,167,1.291,170,1.624,173,1.44,176,2.557,178,1.778,182,2.335,184,1.675,186,1.675,187,2.351,189,1.919,191,1.44,193,1.371,196,1.675,198,1.539,199,1.675,206,1.675,209,1.989,210,2.351,211,1.989,212,1.44,213,1.44,214,1.44,215,1.252,216,1.44,217,3.226,219,1.549,221,0.795,222,1.063,226,0.611,227,0.696,242,1.781,245,1.096,274,1.989,276,1.989,288,1.063,289,1.063,293,1.44,305,1.096,312,1.44,313,1.539,322,1.252,328,1.252,340,1.989,360,3.376,365,1.989,366,1.989,381,1.989,383,2.461,397,1.675,403,2.792,408,3.037,457,1.263,458,3.052,459,2.467,460,3.052,461,2.467,462,2.467,463,2.467,464,3.052,465,2.467,466,3.052,467,1.566,468,2.467,469,1.566,470,4.737,471,1.566,472,2.467,473,2.467,474,2.467,475,2.467,476,2.467,477,1.566,478,2.467,479,3.766,480,1.566,481,2.467,482,2.467,483,2.467,484,2.467,485,2.467,486,2.467,487,2.467,488,1.566,489,2.467,490,2.467,491,2.467,492,2.467,493,2.467,494,1.566,495,2.467,496,1.566,497,2.467,498,2.467,499,2.467,500,2.467,501,2.467,502,1.989,503,2.467,504,2.467,505,2.467,506,2.467,507,1.566,508,2.467,509,1.566,510,1.263,511,1.566,512,1.566,513,1.566,514,1.566,515,1.566,516,1.566,517,1.566,518,1.566,519,1.566,520,1.566,521,1.566,522,2.467,523,1.566,524,2.467,525,1.566,526,2.467,527,1.566,528,3.052,529,1.566,530,1.566,531,2.467,532,1.566,533,1.566,534,2.467,535,2.467,536,3.766,537,2.461,538,1.566,539,1.566,540,1.566,541,1.566,542,3.462,543,1.566,544,2.467,545,3.052,546,1.566,547,2.467,548,2.467,549,2.467,550,1.566,551,1.566,552,1.566,553,1.566]],["title/injectables/LocaisService.html",[142,1.392,290,1.069]],["body/injectables/LocaisService.html",[3,0.422,4,0.422,9,0.359,14,1.253,19,0.49,20,0.715,22,1.032,23,0.052,24,1.511,25,0.736,26,0.736,29,1.689,31,0.988,32,0.49,33,0.616,34,0.823,41,1.224,53,0.029,54,0.029,82,1.253,112,1.588,114,1.438,118,1.393,121,2.478,122,1.393,132,1.393,137,1.393,142,2.067,145,1.809,146,1.809,148,2.009,149,1.588,152,2.376,153,2.127,157,2.009,163,1.867,167,1.7,170,1.64,172,2.295,189,1.983,193,1.6,198,1.393,204,1.444,214,2.376,226,0.837,227,0.954,245,1.809,290,1.223,291,1.253,293,1.829,294,2.128,295,2.161,296,1.879,297,2.161,298,2.161,299,1.457,300,3.07,302,1.457,303,2.37,305,1.393,306,2.128,307,1.879,308,2.128,309,2.764,310,1.457,311,2.128,312,1.829,313,2.009,314,3.063,315,3.07,316,2.639,317,1.457,319,2.764,320,2.067,321,2.764,322,2.067,323,2.128,324,1.457,326,2.128,327,2.128,328,1.591,329,1.09,330,1.09,331,1.457,332,1.457,333,1.457,334,2.764,338,1.457,413,3.283,554,1.731,555,3.134,556,2.146,557,2.146,558,2.146,559,2.146,560,2.146,561,2.146,562,2.146,563,2.146,564,2.146]],["title/injectables/PersonagensService.html",[141,1.392,290,1.069]],["body/injectables/PersonagensService.html",[3,0.424,4,0.424,9,0.361,14,1.259,19,0.492,20,0.718,22,1.034,23,0.052,24,1.513,25,0.739,26,0.739,29,1.693,31,0.99,32,0.492,33,0.618,34,0.826,41,1.227,53,0.029,54,0.029,82,1.259,112,1.592,114,1.441,118,1.398,121,2.481,122,1.398,132,1.398,137,1.398,141,2.072,145,1.813,146,1.813,148,2.013,149,1.592,152,2.382,153,2.13,157,2.013,163,1.87,167,1.702,170,1.643,172,2.299,189,1.985,193,1.603,198,1.398,201,2.771,204,1.449,212,2.382,226,0.842,227,0.959,245,1.813,290,1.227,291,1.259,293,1.836,294,2.136,295,2.167,296,1.885,297,2.167,298,2.167,299,1.465,300,3.075,302,1.465,303,2.374,305,1.398,306,2.136,307,1.885,308,2.136,309,2.771,310,1.465,311,2.136,312,1.836,313,2.013,314,3.065,315,3.075,316,2.644,317,1.465,319,2.771,320,2.072,321,2.771,322,2.072,323,2.136,324,1.465,326,2.136,327,2.136,328,1.597,329,1.095,330,1.095,331,1.465,332,1.465,333,1.465,334,2.771,338,1.465,565,1.74,566,3.146,567,2.158,568,2.158,569,2.158,570,2.158,571,2.158,572,2.158]],["title/interfaces/TableHeader.html",[178,1.218,452,1.392]],["body/interfaces/TableHeader.html",[3,0.793,4,0.793,9,0.675,19,0.921,20,1.086,22,1.086,23,0.049,24,1.626,33,0.793,53,0.043,54,0.043,178,2.116,193,1.793,219,2.656,221,2.048,452,2.048,453,2.739,573,3.254]],["title/coverage.html",[574,3.003]],["body/coverage.html",[0,1.003,1,1.033,9,0.576,10,2.773,22,0.784,23,0.051,43,0.903,45,1.033,47,0.903,49,1.033,53,0.039,54,0.039,111,2.773,141,1.745,142,1.745,143,1.745,178,1.528,179,2.007,191,3.12,203,2.007,204,1.341,218,2.756,221,1.745,290,1.842,292,2.773,330,2.192,339,2.773,348,2.773,411,2.334,452,2.192,454,2.773,457,2.773,510,2.773,537,2.773,554,2.773,565,2.773,573,2.773,574,2.773,575,3.438,576,3.438,577,3.438,578,3.438,579,3.808,580,5.103,581,5.103,582,3.438,583,3.438,584,4.722,585,4.722,586,3.438,587,3.438,588,3.438,589,3.438,590,3.438,591,3.438,592,3.438,593,3.438,594,2.773,595,2.773,596,3.438]],["title/dependencies.html",[58,1.922,597,1.56]],["body/dependencies.html",[23,0.051,32,0.892,53,0.043,54,0.043,58,2.281,60,2.654,75,3.768,76,3.172,102,2.281,329,1.984,598,3.909,599,5.474,600,3.909,601,4.672,602,3.909,603,3.909,604,3.909,605,3.909,606,3.909,607,3.909,608,3.909,609,3.909,610,3.909,611,3.909,612,3.909]],["title/index.html",[19,0.524,613,2.297,614,2.297]],["body/index.html",[23,0.044,53,0.04,54,0.04,114,1.326,149,1.388,155,2.435,167,1.512,170,1.767,182,2.8,213,2.077,215,1.806,313,1.581,320,1.806,322,1.806,344,2.869,345,2.869,346,2.869,397,2.996,502,2.869,597,2.416,615,4.796,616,3.558,617,3.558,618,3.558,619,3.558,620,3.558,621,4.796,622,3.558,623,4.412,624,4.412,625,3.558,626,3.558,627,3.558,628,3.558,629,4.796,630,3.558,631,3.558,632,3.558,633,3.558,634,3.558,635,3.558,636,4.412,637,4.796,638,3.558,639,4.412,640,3.558,641,4.412,642,3.558,643,3.558,644,4.412,645,3.558,646,3.558,647,3.558,648,4.412,649,2.869,650,3.558,651,3.558,652,3.558,653,3.558,654,3.558,655,3.558,656,3.558,657,3.558]],["title/modules.html",[57,1.891]],["body/modules.html",[23,0.045,53,0.045,54,0.045,56,2.497,57,2.172,67,2.172,76,2.905,658,4.278,659,4.278,660,4.926,661,4.278,662,4.278]],["title/overview.html",[663,3.003]],["body/overview.html",[1,1.613,2,1.642,23,0.05,35,1.442,43,1.281,45,1.466,47,1.281,49,1.466,53,0.041,54,0.041,55,2.157,56,3.265,57,1.876,58,2.157,59,2.98,60,2.509,61,2.98,62,2.509,63,2.98,64,2.98,65,2.98,66,2.98,67,2.476,68,3.642,69,2.98,70,2.98,101,2.157,215,2.293,291,2.157,453,2.509,649,3.642,663,2.98,664,3.696]],["title/properties.html",[20,0.751,597,1.56]],["body/properties.html",[20,0.992,23,0.048,53,0.045,54,0.045,665,4.347,666,4.347]],["title/routes.html",[101,2.174]],["body/routes.html",[23,0.046,53,0.046,54,0.046,101,2.558]],["title/miscellaneous/variables.html",[667,1.853,668,2.655]],["body/miscellaneous/variables.html",[19,0.715,22,1.16,23,0.052,25,1.7,26,1.7,41,1.359,53,0.037,54,0.037,167,1.074,173,1.829,179,2.376,193,1.904,203,2.376,216,1.829,218,1.829,219,2.766,242,1.829,262,3.646,264,3.282,266,2.527,269,2.527,279,2.527,282,2.527,295,2.376,330,2.43,411,2.764,579,3.859,594,2.527,595,2.527,667,2.527,668,2.527,669,4.521,670,3.134,671,3.134,672,3.134,673,3.134,674,3.134,675,3.134,676,3.134,677,4.07,678,4.07]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":191,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":666,"title":{},"body":{"properties.html":{}}}],["0.13.0",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":582,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":213,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"index.html":{}}}],["1/1",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["11/16/2023",{"_index":560,"title":{},"body":{"injectables/LocaisService.html":{}}}],["15/17",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["16.0.0",{"_index":599,"title":{},"body":{"dependencies.html":{}}}],["16.2.12",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["1px",{"_index":547,"title":{},"body":{"components/ListaComponent.html":{}}}],["2",{"_index":215,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"index.html":{},"overview.html":{}}}],["2.3.0",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":530,"title":{},"body":{"components/ListaComponent.html":{}}}],["200px",{"_index":529,"title":{},"body":{"components/ListaComponent.html":{}}}],["2:35:10",{"_index":561,"title":{},"body":{"injectables/LocaisService.html":{}}}],["3",{"_index":649,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4200",{"_index":640,"title":{},"body":{"index.html":{}}}],["5",{"_index":664,"title":{},"body":{"overview.html":{}}}],["5.3.2",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":539,"title":{},"body":{"components/ListaComponent.html":{}}}],["7.8.0",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["8080",{"_index":656,"title":{},"body":{"index.html":{}}}],["83",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["84",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["aba",{"_index":645,"title":{},"body":{"index.html":{}}}],["aberta",{"_index":646,"title":{},"body":{"index.html":{}}}],["abra",{"_index":623,"title":{},"body":{"index.html":{}}}],["abrirdetalhes",{"_index":461,"title":{},"body":{"components/ListaComponent.html":{}}}],["abrirdetalhes(id",{"_index":487,"title":{},"body":{"components/ListaComponent.html":{}}}],["acessada",{"_index":169,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["acionado",{"_index":365,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["activatedroute",{"_index":139,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["actual_component",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["adicionam",{"_index":399,"title":{},"body":{"components/HomeComponent.html":{}}}],["air_date",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":346,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["angular/compiler",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["angular/material/form",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":102,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"components/ListaComponent.html":{},"dependencies.html":{}}}],["ao",{"_index":482,"title":{},"body":{"components/ListaComponent.html":{}}}],["aparece",{"_index":278,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["api",{"_index":313,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"index.html":{}}}],["apiurl",{"_index":295,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"miscellaneous/variables.html":{}}}],["aplicação",{"_index":341,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["app.component",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applyfilter",{"_index":358,"title":{},"body":{"components/HomeComponent.html":{}}}],["applyfilter(e",{"_index":363,"title":{},"body":{"components/HomeComponent.html":{}}}],["appmodule",{"_index":56,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":67,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["após",{"_index":631,"title":{},"body":{"index.html":{}}}],["array",{"_index":206,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["atuais",{"_index":369,"title":{},"body":{"components/HomeComponent.html":{}}}],["atual",{"_index":328,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["atualizada",{"_index":380,"title":{},"body":{"components/HomeComponent.html":{}}}],["atualizado",{"_index":367,"title":{},"body":{"components/HomeComponent.html":{}}}],["auto",{"_index":541,"title":{},"body":{"components/ListaComponent.html":{}}}],["automaticamente",{"_index":647,"title":{},"body":{"index.html":{}}}],["available",{"_index":662,"title":{},"body":{"modules.html":{}}}],["bootstrap",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":545,"title":{},"body":{"components/ListaComponent.html":{}}}],["bottom",{"_index":546,"title":{},"body":{"components/ListaComponent.html":{}}}],["break",{"_index":255,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["browse",{"_index":660,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["buffer",{"_index":528,"title":{},"body":{"components/ListaComponent.html":{}}}],["busca",{"_index":375,"title":{},"body":{"components/HomeComponent.html":{}}}],["campo",{"_index":373,"title":{},"body":{"components/HomeComponent.html":{}}}],["carrega",{"_index":396,"title":{},"body":{"components/HomeComponent.html":{}}}],["carregadas",{"_index":385,"title":{},"body":{"components/HomeComponent.html":{}}}],["carregado",{"_index":174,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["carregando",{"_index":498,"title":{},"body":{"components/ListaComponent.html":{}}}],["carregar",{"_index":151,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["carregarinformacoes",{"_index":133,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["case",{"_index":250,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["caso",{"_index":397,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{},"index.html":{}}}],["cell",{"_index":544,"title":{},"body":{"components/ListaComponent.html":{}}}],["changeselectedtab",{"_index":359,"title":{},"body":{"components/HomeComponent.html":{}}}],["changeselectedtab(e",{"_index":377,"title":{},"body":{"components/HomeComponent.html":{}}}],["checar",{"_index":650,"title":{},"body":{"index.html":{}}}],["chegar",{"_index":484,"title":{},"body":{"components/ListaComponent.html":{}}}],["class",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["clicado",{"_index":493,"title":{},"body":{"components/ListaComponent.html":{}}}],["cluster_appmodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["color",{"_index":552,"title":{},"body":{"components/ListaComponent.html":{}}}],["column).id",{"_index":521,"title":{},"body":{"components/ListaComponent.html":{}}}],["column.display",{"_index":534,"title":{},"body":{"components/ListaComponent.html":{}}}],["columnsdisplaycharacter",{"_index":203,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsdisplayepisode",{"_index":179,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsdisplaylocation",{"_index":411,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnstodisplay",{"_index":460,"title":{},"body":{"components/ListaComponent.html":{}}}],["coluna",{"_index":476,"title":{},"body":{"components/ListaComponent.html":{}}}],["colunas",{"_index":187,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["com",{"_index":172,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["comando",{"_index":629,"title":{},"body":{"index.html":{}}}],["compodoc:build",{"_index":653,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["componente",{"_index":113,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"overview.html":{}}}],["console.log(`listando",{"_index":425,"title":{},"body":{"components/HomeComponent.html":{}}}],["console.log(`scrollando",{"_index":449,"title":{},"body":{"components/HomeComponent.html":{}}}],["const",{"_index":103,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ListaComponent.html":{}}}],["constructor",{"_index":137,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["constructor(activatedroute",{"_index":138,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["constructor(httpclient",{"_index":299,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["constructor(personagensservice",{"_index":361,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(router",{"_index":467,"title":{},"body":{"components/ListaComponent.html":{}}}],["consumida",{"_index":309,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["consumindo",{"_index":370,"title":{},"body":{"components/HomeComponent.html":{}}}],["consumir",{"_index":388,"title":{},"body":{"components/HomeComponent.html":{}}}],["consumo",{"_index":312,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["contagem",{"_index":416,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":574,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["currentcolor",{"_index":553,"title":{},"body":{"components/ListaComponent.html":{}}}],["cursor",{"_index":288,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/ListaComponent.html":{}}}],["da",{"_index":189,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["dado",{"_index":118,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["dado.air_date",{"_index":283,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.dimension",{"_index":280,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.episode",{"_index":284,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.gender",{"_index":270,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.id",{"_index":261,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.location.name",{"_index":277,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.name",{"_index":263,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.origin.name",{"_index":272,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.species",{"_index":267,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.status",{"_index":265,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado.type",{"_index":268,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["dado[column.id",{"_index":535,"title":{},"body":{"components/ListaComponent.html":{}}}],["dados",{"_index":198,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["das",{"_index":186,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["data",{"_index":242,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"miscellaneous/variables.html":{}}}],["data.info.pages",{"_index":434,"title":{},"body":{"components/HomeComponent.html":{}}}],["date",{"_index":559,"title":{},"body":{"injectables/LocaisService.html":{}}}],["de",{"_index":167,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["dentro",{"_index":188,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["dependencies",{"_index":58,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependências",{"_index":632,"title":{},"body":{"index.html":{}}}],["depências",{"_index":628,"title":{},"body":{"index.html":{}}}],["description",{"_index":112,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["destino",{"_index":518,"title":{},"body":{"components/ListaComponent.html":{}}}],["detalhes",{"_index":117,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["detalhes'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["detalhes.component.css",{"_index":124,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["detalhes.component.html",{"_index":125,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["detalhes/:tipo/:id",{"_index":105,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{}}}],["detalhescomponent",{"_index":43,"title":{"components/DetalhesComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{},"overview.html":{}}}],["deve",{"_index":390,"title":{},"body":{"components/HomeComponent.html":{}}}],["dimension",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dimensão",{"_index":279,"title":{},"body":{"components/DetalhesComponent.html":{},"miscellaneous/variables.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["directives",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["diretamente",{"_index":517,"title":{},"body":{"components/ListaComponent.html":{}}}],["disparado",{"_index":481,"title":{},"body":{"components/ListaComponent.html":{}}}],["disparar",{"_index":395,"title":{},"body":{"components/HomeComponent.html":{}}}],["display",{"_index":219,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"interfaces/TableHeader.html":{},"miscellaneous/variables.html":{}}}],["display.ts",{"_index":579,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["displayedcolumns",{"_index":464,"title":{},"body":{"components/ListaComponent.html":{}}}],["displays",{"_index":183,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["disponíveis",{"_index":207,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["documentation",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":651,"title":{},"body":{"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["dos",{"_index":184,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["dynamic",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":182,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"index.html":{}}}],["e.target.offsetheight",{"_index":523,"title":{},"body":{"components/ListaComponent.html":{}}}],["e.target.scrollheight",{"_index":525,"title":{},"body":{"components/ListaComponent.html":{}}}],["e.target.scrolltop",{"_index":527,"title":{},"body":{"components/ListaComponent.html":{}}}],["e.target.value",{"_index":444,"title":{},"body":{"components/HomeComponent.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["eles",{"_index":211,"title":{},"body":{"components/DetalhesComponent.html":{},"components/ListaComponent.html":{}}}],["em",{"_index":276,"title":{},"body":{"components/DetalhesComponent.html":{},"components/ListaComponent.html":{}}}],["end",{"_index":617,"title":{},"body":{"index.html":{}}}],["enviroment",{"_index":327,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["environment",{"_index":330,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":326,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["episode",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["episodio",{"_index":251,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["episodios",{"_index":401,"title":{},"body":{"components/HomeComponent.html":{}}}],["episodioscolumns",{"_index":126,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["episodiosdados",{"_index":352,"title":{},"body":{"components/HomeComponent.html":{}}}],["episodiosservice",{"_index":143,"title":{"injectables/EpisodiosService.html":{}},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"coverage.html":{}}}],["episódio",{"_index":216,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/ListaComponent.html":{},"miscellaneous/variables.html":{}}}],["episódios",{"_index":190,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{}}}],["espécie",{"_index":266,"title":{},"body":{"components/DetalhesComponent.html":{},"miscellaneous/variables.html":{}}}],["est",{"_index":381,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["esteja",{"_index":501,"title":{},"body":{"components/ListaComponent.html":{}}}],["eventemitter",{"_index":479,"title":{},"body":{"components/ListaComponent.html":{}}}],["exibido",{"_index":154,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["exibidos",{"_index":196,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["exibindo",{"_index":478,"title":{},"body":{"components/ListaComponent.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{}}}],["exports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["field",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"coverage.html":{}}}],["filtragem",{"_index":404,"title":{},"body":{"components/HomeComponent.html":{}}}],["filtro",{"_index":303,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["fim",{"_index":485,"title":{},"body":{"components/ListaComponent.html":{}}}],["final",{"_index":408,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["finalpage",{"_index":353,"title":{},"body":{"components/HomeComponent.html":{}}}],["fora",{"_index":492,"title":{},"body":{"components/ListaComponent.html":{}}}],["front",{"_index":616,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["function",{"_index":455,"title":{},"body":{"interfaces/IService.html":{}}}],["gender",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["genérica",{"_index":306,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["genêro",{"_index":269,"title":{},"body":{"components/DetalhesComponent.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":613,"title":{"index.html":{}},"body":{}}],["graph",{"_index":661,"title":{},"body":{"modules.html":{}}}],["guardar",{"_index":407,"title":{},"body":{"components/HomeComponent.html":{}}}],["guia",{"_index":655,"title":{},"body":{"index.html":{}}}],["hajam",{"_index":398,"title":{},"body":{"components/HomeComponent.html":{}}}],["header",{"_index":340,"title":{},"body":{"components/HeaderComponent.html":{},"components/ListaComponent.html":{}}}],["header'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["header.component.css",{"_index":342,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":343,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.model",{"_index":222,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["header.model.ts",{"_index":573,"title":{},"body":{"interfaces/TableHeader.html":{},"coverage.html":{}}}],["headercomponent",{"_index":45,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":185,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["height",{"_index":538,"title":{},"body":{"components/ListaComponent.html":{}}}],["home",{"_index":106,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["home.component.css",{"_index":350,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":351,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":47,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hora",{"_index":409,"title":{},"body":{"components/HomeComponent.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["http://localhost:4200",{"_index":642,"title":{},"body":{"index.html":{}}}],["http://localhost:8080",{"_index":657,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":300,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["httpclientmodule",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["https://rickandmortyapi.com/api",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":193,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"miscellaneous/variables.html":{}}}],["iddado",{"_index":127,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["identifier",{"_index":576,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":181,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["implements",{"_index":122,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["independente",{"_index":376,"title":{},"body":{"components/HomeComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"miscellaneous/variables.html":{}}}],["infinito",{"_index":504,"title":{},"body":{"components/ListaComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{}}}],["informações",{"_index":152,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["injectable",{"_index":290,"title":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"coverage.html":{}}}],["injectables",{"_index":291,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"overview.html":{}}}],["input",{"_index":217,"title":{},"body":{"components/DetalhesComponent.html":{},"components/ListaComponent.html":{}}}],["inputs",{"_index":463,"title":{},"body":{"components/ListaComponent.html":{}}}],["instaladas",{"_index":634,"title":{},"body":{"index.html":{}}}],["instale",{"_index":627,"title":{},"body":{"index.html":{}}}],["install",{"_index":630,"title":{},"body":{"index.html":{}}}],["interface",{"_index":452,"title":{"interfaces/IService.html":{},"interfaces/TableHeader.html":{}},"body":{"interfaces/IService.html":{},"interfaces/TableHeader.html":{},"coverage.html":{}}}],["interface/iservice",{"_index":332,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["interfaces",{"_index":453,"title":{},"body":{"interfaces/IService.html":{},"interfaces/TableHeader.html":{},"overview.html":{}}}],["ir",{"_index":150,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["iservice",{"_index":204,"title":{"interfaces/IService.html":{}},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"coverage.html":{}}}],["lançamento",{"_index":282,"title":{},"body":{"components/DetalhesComponent.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"overview.html":{}}}],["limit",{"_index":531,"title":{},"body":{"components/ListaComponent.html":{}}}],["limpando",{"_index":368,"title":{},"body":{"components/HomeComponent.html":{}}}],["link",{"_index":287,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{}}}],["lista",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["lista.component.css",{"_index":458,"title":{},"body":{"components/ListaComponent.html":{}}}],["lista.component.html",{"_index":459,"title":{},"body":{"components/ListaComponent.html":{}}}],["listacomponent",{"_index":49,"title":{"components/ListaComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listagem",{"_index":305,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["listar",{"_index":296,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["listar(page",{"_index":302,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["listar(tipodado",{"_index":386,"title":{},"body":{"components/HomeComponent.html":{}}}],["listarunico",{"_index":297,"title":{},"body":{"injectables/EpisodiosService.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["listarunico(id",{"_index":317,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["listarunicoporurl",{"_index":298,"title":{},"body":{"injectables/EpisodiosService.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["listarunicoporurl(url",{"_index":324,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["listas",{"_index":417,"title":{},"body":{"components/HomeComponent.html":{}}}],["listasecundaria",{"_index":128,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["lo",{"_index":516,"title":{},"body":{"components/ListaComponent.html":{}}}],["locais",{"_index":413,"title":{},"body":{"components/HomeComponent.html":{},"injectables/LocaisService.html":{}}}],["locaiscolumns",{"_index":354,"title":{},"body":{"components/HomeComponent.html":{}}}],["locaisdados",{"_index":355,"title":{},"body":{"components/HomeComponent.html":{}}}],["locaisservice",{"_index":142,"title":{"injectables/LocaisService.html":{}},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"injectables/LocaisService.html":{},"coverage.html":{}}}],["local",{"_index":214,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{}}}],["localhost",{"_index":641,"title":{},"body":{"index.html":{}}}],["ltima",{"_index":274,"title":{},"body":{"components/DetalhesComponent.html":{},"components/ListaComponent.html":{}}}],["manager",{"_index":622,"title":{},"body":{"index.html":{}}}],["mapeamento",{"_index":505,"title":{},"body":{"components/ListaComponent.html":{}}}],["mapping",{"_index":511,"title":{},"body":{"components/ListaComponent.html":{}}}],["mat",{"_index":536,"title":{},"body":{"components/ListaComponent.html":{}}}],["matching",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["mdc",{"_index":542,"title":{},"body":{"components/ListaComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["methods",{"_index":132,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["miscellaneous",{"_index":667,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":55,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":57,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["morty",{"_index":345,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["mostrado",{"_index":475,"title":{},"body":{"components/ListaComponent.html":{}}}],["mostrar",{"_index":115,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["método",{"_index":148,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["na",{"_index":155,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"index.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"miscellaneous/variables.html":{}}}],["neste",{"_index":285,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["new",{"_index":510,"title":{},"body":{"components/ListaComponent.html":{},"coverage.html":{}}}],["ng",{"_index":636,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":134,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["nico",{"_index":321,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["node.js",{"_index":620,"title":{},"body":{"index.html":{}}}],["nome",{"_index":262,"title":{},"body":{"components/DetalhesComponent.html":{},"miscellaneous/variables.html":{}}}],["nos",{"_index":405,"title":{},"body":{"components/HomeComponent.html":{}}}],["nova",{"_index":175,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["novo",{"_index":171,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["novos",{"_index":371,"title":{},"body":{"components/HomeComponent.html":{}}}],["npm",{"_index":621,"title":{},"body":{"index.html":{}}}],["numa",{"_index":382,"title":{},"body":{"components/HomeComponent.html":{}}}],["number",{"_index":163,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["number(params['id",{"_index":240,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["number(params['tipo",{"_index":238,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["não",{"_index":383,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["o",{"_index":170,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"index.html":{}}}],["object",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":314,"title":{},"body":{"injectables/EpisodiosService.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["onchanges",{"_index":507,"title":{},"body":{"components/ListaComponent.html":{}}}],["oninit",{"_index":123,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["onsameurlnavigation",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ontablescroll",{"_index":462,"title":{},"body":{"components/ListaComponent.html":{}}}],["ontablescroll(e",{"_index":495,"title":{},"body":{"components/ListaComponent.html":{}}}],["optional",{"_index":146,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["origem",{"_index":271,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["os",{"_index":116,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["ou",{"_index":202,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["out",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["output",{"_index":508,"title":{},"body":{"components/ListaComponent.html":{}}}],["outputs",{"_index":465,"title":{},"body":{"components/ListaComponent.html":{}}}],["outras",{"_index":165,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["overflow",{"_index":540,"title":{},"body":{"components/ListaComponent.html":{}}}],["overview",{"_index":663,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":597,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":307,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["pages/detalhes/detalhes.component",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pages/home/home.component",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page}/${this.finalpage[tipodado",{"_index":426,"title":{},"body":{"components/HomeComponent.html":{}}}],["pagina",{"_index":308,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["paginação",{"_index":410,"title":{},"body":{"components/HomeComponent.html":{}}}],["pai",{"_index":483,"title":{},"body":{"components/ListaComponent.html":{}}}],["para",{"_index":114,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"index.html":{}}}],["param",{"_index":245,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["parameters",{"_index":145,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["params",{"_index":236,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["passada",{"_index":490,"title":{},"body":{"components/ListaComponent.html":{}}}],["pasta",{"_index":625,"title":{},"body":{"index.html":{}}}],["path",{"_index":104,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pela",{"_index":120,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["pelo",{"_index":491,"title":{},"body":{"components/ListaComponent.html":{}}}],["personagem",{"_index":212,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/PersonagensService.html":{}}}],["personagens",{"_index":201,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"injectables/PersonagensService.html":{}}}],["personagenscolumns",{"_index":129,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["personagensdados",{"_index":356,"title":{},"body":{"components/HomeComponent.html":{}}}],["personagensservice",{"_index":141,"title":{"injectables/PersonagensService.html":{}},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"injectables/PersonagensService.html":{},"coverage.html":{}}}],["pesquisa",{"_index":316,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["pesquisar",{"_index":451,"title":{},"body":{"components/HomeComponent.html":{}}}],["podendo",{"_index":200,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["pointer",{"_index":289,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/ListaComponent.html":{}}}],["pois",{"_index":513,"title":{},"body":{"components/ListaComponent.html":{}}}],["porta",{"_index":639,"title":{},"body":{"index.html":{}}}],["possibilita",{"_index":503,"title":{},"body":{"components/ListaComponent.html":{}}}],["possível",{"_index":514,"title":{},"body":{"components/ListaComponent.html":{}}}],["pre",{"_index":618,"title":{},"body":{"index.html":{}}}],["preencher",{"_index":389,"title":{},"body":{"components/HomeComponent.html":{}}}],["preenchido",{"_index":391,"title":{},"body":{"components/HomeComponent.html":{}}}],["principal",{"_index":349,"title":{},"body":{"components/HomeComponent.html":{}}}],["private",{"_index":227,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["projeto",{"_index":615,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"properties.html":{}}}],["providedin",{"_index":333,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["próxima",{"_index":499,"title":{},"body":{"components/ListaComponent.html":{}}}],["ps",{"_index":643,"title":{},"body":{"index.html":{}}}],["puxar",{"_index":473,"title":{},"body":{"components/ListaComponent.html":{}}}],["página",{"_index":176,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["páginas",{"_index":166,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["quando",{"_index":366,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["que",{"_index":149,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"index.html":{}}}],["queira",{"_index":644,"title":{},"body":{"index.html":{}}}],["raiz",{"_index":626,"title":{},"body":{"index.html":{}}}],["realiz",{"_index":515,"title":{},"body":{"components/ListaComponent.html":{}}}],["realizado",{"_index":512,"title":{},"body":{"components/ListaComponent.html":{}}}],["realizar",{"_index":374,"title":{},"body":{"components/HomeComponent.html":{}}}],["receber",{"_index":168,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["recebido",{"_index":119,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["recuperado",{"_index":323,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["recuperar",{"_index":319,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["recuperarlista",{"_index":135,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["recuperação",{"_index":294,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["redirecionar",{"_index":136,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["redirecionar(url",{"_index":162,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["redirectto",{"_index":107,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reload",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["requisitos",{"_index":619,"title":{},"body":{"index.html":{}}}],["reset",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resgate",{"_index":489,"title":{},"body":{"components/ListaComponent.html":{}}}],["residente",{"_index":256,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["residentes",{"_index":281,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["resultado",{"_index":315,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["results",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":334,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["returns",{"_index":157,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["rick",{"_index":344,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["rickemorty",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["rodar",{"_index":638,"title":{},"body":{"index.html":{}}}],["rode",{"_index":635,"title":{},"body":{"index.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["router",{"_index":140,"title":{},"body":{"components/DetalhesComponent.html":{},"components/ListaComponent.html":{}}}],["routermodule",{"_index":100,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":108,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":101,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":99,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":543,"title":{},"body":{"components/ListaComponent.html":{}}}],["row:hover",{"_index":551,"title":{},"body":{"components/ListaComponent.html":{}}}],["run",{"_index":652,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":329,"title":{},"body":{"injectables/EpisodiosService.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"dependencies.html":{}}}],["scroll",{"_index":360,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["scroll(tipodado",{"_index":393,"title":{},"body":{"components/HomeComponent.html":{}}}],["scrollfimpagina",{"_index":466,"title":{},"body":{"components/ListaComponent.html":{}}}],["scrolllocation",{"_index":526,"title":{},"body":{"components/ListaComponent.html":{}}}],["secundária",{"_index":161,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["seja",{"_index":502,"title":{},"body":{"components/ListaComponent.html":{},"index.html":{}}}],["selecionado",{"_index":421,"title":{},"body":{"components/HomeComponent.html":{}}}],["selected",{"_index":357,"title":{},"body":{"components/HomeComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["sendo",{"_index":210,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["ser",{"_index":153,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["serem",{"_index":633,"title":{},"body":{"index.html":{}}}],["seria",{"_index":209,"title":{},"body":{"components/DetalhesComponent.html":{},"components/ListaComponent.html":{}}}],["seriam",{"_index":472,"title":{},"body":{"components/ListaComponent.html":{}}}],["serve",{"_index":637,"title":{},"body":{"index.html":{}}}],["service",{"_index":293,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["services",{"_index":130,"title":{},"body":{"components/DetalhesComponent.html":{},"interfaces/IService.html":{}}}],["serão",{"_index":199,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["seu",{"_index":486,"title":{},"body":{"components/ListaComponent.html":{}}}],["seus",{"_index":195,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["shared/header/header.component",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/lista/lista.component",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["simplechanges",{"_index":509,"title":{},"body":{"components/ListaComponent.html":{}}}],["solid",{"_index":548,"title":{},"body":{"components/ListaComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{}}}],["species",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../columns",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":98,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/core/consts/columns",{"_index":218,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interface/iservice",{"_index":220,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/core/interface/iservice.ts",{"_index":454,"title":{},"body":{"interfaces/IService.html":{},"coverage.html":{}}}],["src/app/core/model/table",{"_index":221,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"interfaces/TableHeader.html":{},"coverage.html":{}}}],["src/app/core/services/episodios.service",{"_index":223,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["src/app/core/services/episodios.service.ts",{"_index":292,"title":{},"body":{"injectables/EpisodiosService.html":{},"coverage.html":{}}}],["src/app/core/services/episodios.service.ts:25",{"_index":301,"title":{},"body":{"injectables/EpisodiosService.html":{}}}],["src/app/core/services/episodios.service.ts:38",{"_index":304,"title":{},"body":{"injectables/EpisodiosService.html":{}}}],["src/app/core/services/episodios.service.ts:52",{"_index":318,"title":{},"body":{"injectables/EpisodiosService.html":{}}}],["src/app/core/services/episodios.service.ts:62",{"_index":325,"title":{},"body":{"injectables/EpisodiosService.html":{}}}],["src/app/core/services/locais.service",{"_index":224,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["src/app/core/services/locais.service.ts",{"_index":554,"title":{},"body":{"injectables/LocaisService.html":{},"coverage.html":{}}}],["src/app/core/services/locais.service.ts:26",{"_index":555,"title":{},"body":{"injectables/LocaisService.html":{}}}],["src/app/core/services/locais.service.ts:39",{"_index":556,"title":{},"body":{"injectables/LocaisService.html":{}}}],["src/app/core/services/locais.service.ts:53",{"_index":557,"title":{},"body":{"injectables/LocaisService.html":{}}}],["src/app/core/services/locais.service.ts:63",{"_index":558,"title":{},"body":{"injectables/LocaisService.html":{}}}],["src/app/core/services/personagens.service",{"_index":225,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{}}}],["src/app/core/services/personagens.service.ts",{"_index":565,"title":{},"body":{"injectables/PersonagensService.html":{},"coverage.html":{}}}],["src/app/core/services/personagens.service.ts:25",{"_index":566,"title":{},"body":{"injectables/PersonagensService.html":{}}}],["src/app/core/services/personagens.service.ts:38",{"_index":567,"title":{},"body":{"injectables/PersonagensService.html":{}}}],["src/app/core/services/personagens.service.ts:52",{"_index":568,"title":{},"body":{"injectables/PersonagensService.html":{}}}],["src/app/core/services/personagens.service.ts:62",{"_index":569,"title":{},"body":{"injectables/PersonagensService.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts",{"_index":111,"title":{},"body":{"components/DetalhesComponent.html":{},"coverage.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:114",{"_index":164,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:125",{"_index":160,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:30",{"_index":208,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:37",{"_index":192,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:44",{"_index":205,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:51",{"_index":177,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:58",{"_index":197,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:65",{"_index":180,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:72",{"_index":144,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:86",{"_index":159,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/detalhes/detalhes.component.ts:93",{"_index":147,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["src/app/pages/home/home.component.ts",{"_index":348,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home.component.ts:100",{"_index":392,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:112",{"_index":387,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:175",{"_index":364,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:189",{"_index":378,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:198",{"_index":394,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:28",{"_index":420,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:35",{"_index":415,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:42",{"_index":406,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:49",{"_index":419,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:56",{"_index":418,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:63",{"_index":414,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:70",{"_index":412,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:77",{"_index":402,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:84",{"_index":400,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/pages/home/home.component.ts:92",{"_index":362,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":339,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/lista/lista.component.ts",{"_index":457,"title":{},"body":{"components/ListaComponent.html":{},"coverage.html":{}}}],["src/app/shared/lista/lista.component.ts:25",{"_index":471,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/shared/lista/lista.component.ts:32",{"_index":477,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/shared/lista/lista.component.ts:39",{"_index":469,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/shared/lista/lista.component.ts:46",{"_index":480,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/shared/lista/lista.component.ts:53",{"_index":468,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/shared/lista/lista.component.ts:59",{"_index":494,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/shared/lista/lista.component.ts:71",{"_index":496,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/app/shared/lista/lista.component.ts:90",{"_index":488,"title":{},"body":{"components/ListaComponent.html":{}}}],["src/environments/environment",{"_index":331,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["src/environments/environment.development.ts",{"_index":594,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":595,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":614,"title":{"index.html":{}},"body":{}}],["statements",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":264,"title":{},"body":{"components/DetalhesComponent.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["support",{"_index":658,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":659,"title":{},"body":{"modules.html":{}}}],["switch(this.tipodado",{"_index":249,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["switch(tipodado",{"_index":427,"title":{},"body":{"components/HomeComponent.html":{}}}],["são",{"_index":384,"title":{},"body":{"components/HomeComponent.html":{}}}],["tab",{"_index":379,"title":{},"body":{"components/HomeComponent.html":{}}}],["tabela",{"_index":470,"title":{},"body":{"components/ListaComponent.html":{}}}],["table",{"_index":537,"title":{},"body":{"components/ListaComponent.html":{},"coverage.html":{}}}],["tableheader",{"_index":178,"title":{"interfaces/TableHeader.html":{}},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"interfaces/TableHeader.html":{},"coverage.html":{}}}],["tablescrollheight",{"_index":524,"title":{},"body":{"components/ListaComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["tableviewheight",{"_index":522,"title":{},"body":{"components/ListaComponent.html":{}}}],["tela",{"_index":156,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["ter",{"_index":194,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["terminal",{"_index":624,"title":{},"body":{"index.html":{}}}],["texto",{"_index":286,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.activatedroute.params.subscribe",{"_index":235,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.carregarinformacoes",{"_index":234,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.columnstodisplay",{"_index":519,"title":{},"body":{"components/ListaComponent.html":{}}}],["this.dado",{"_index":243,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.dado.characters",{"_index":259,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.dado.episode",{"_index":252,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.dado.residents",{"_index":257,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.displayedcolumns.map((column",{"_index":520,"title":{},"body":{"components/ListaComponent.html":{}}}],["this.episodiosdados",{"_index":441,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.episodiosdados.concat(data.results",{"_index":442,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.episodiosservice",{"_index":233,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.episodiosservice.listar(page",{"_index":440,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.episodiosservice.listar(page).subscribe",{"_index":443,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filtro",{"_index":428,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.filtro).subscribe",{"_index":430,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.finalpage[tipodado",{"_index":433,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.httpclient.get(`${this.apiurl}/character/${id",{"_index":572,"title":{},"body":{"injectables/PersonagensService.html":{}}}],["this.httpclient.get(`${this.apiurl}/character/?page=${page",{"_index":571,"title":{},"body":{"injectables/PersonagensService.html":{}}}],["this.httpclient.get(`${this.apiurl}/character/?page=${page}&name=${filtro",{"_index":570,"title":{},"body":{"injectables/PersonagensService.html":{}}}],["this.httpclient.get(`${this.apiurl}/episode/${id",{"_index":337,"title":{},"body":{"injectables/EpisodiosService.html":{}}}],["this.httpclient.get(`${this.apiurl}/episode/?page=${page",{"_index":336,"title":{},"body":{"injectables/EpisodiosService.html":{}}}],["this.httpclient.get(`${this.apiurl}/episode/?page=${page}&name=${filtro",{"_index":335,"title":{},"body":{"injectables/EpisodiosService.html":{}}}],["this.httpclient.get(`${this.apiurl}/location/${id",{"_index":564,"title":{},"body":{"injectables/LocaisService.html":{}}}],["this.httpclient.get(`${this.apiurl}/location/?page=${page",{"_index":563,"title":{},"body":{"injectables/LocaisService.html":{}}}],["this.httpclient.get(`${this.apiurl}/location/?page=${page}&name=${filtro",{"_index":562,"title":{},"body":{"injectables/LocaisService.html":{}}}],["this.httpclient.get(url",{"_index":338,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["this.iddado",{"_index":239,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.listar(0",{"_index":422,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.listar(1",{"_index":423,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.listar(2",{"_index":424,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.listar(this.selected",{"_index":446,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.listasecundaria",{"_index":248,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.listasecundaria.concat(data",{"_index":254,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.locaisdados",{"_index":437,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.locaisdados.concat(data.results",{"_index":438,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.locaisservice",{"_index":231,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.locaisservice.listar(page",{"_index":436,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.locaisservice.listar(page).subscribe",{"_index":439,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.page",{"_index":445,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.page[this.selected",{"_index":447,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.page[tipodado",{"_index":450,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.personagensdados",{"_index":431,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.personagensdados.concat(data.results",{"_index":432,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.personagensservice",{"_index":229,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.personagensservice.listar(page",{"_index":429,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.personagensservice.listar(page).subscribe",{"_index":435,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.recuperarlista",{"_index":244,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.router.navigate([`/detalhes/${tipodado}/${data.id",{"_index":247,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.router.navigate([`detalhes/${this.tipodado}/${id",{"_index":533,"title":{},"body":{"components/ListaComponent.html":{}}}],["this.scrollfimpagina.emit(this.tipodado",{"_index":532,"title":{},"body":{"components/ListaComponent.html":{}}}],["this.selected",{"_index":448,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.services[0",{"_index":228,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.services[1",{"_index":230,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.services[2",{"_index":232,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.services[this.tipodado].listarunico(this.iddado).subscribe",{"_index":241,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.services[this.tipodado].listarunicoporurl(episodio).subscribe",{"_index":253,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.services[this.tipodado].listarunicoporurl(personagem).subscribe",{"_index":260,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.services[this.tipodado].listarunicoporurl(residente).subscribe",{"_index":258,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.services[tipodado].listarunicoporurl(url).subscribe",{"_index":246,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["this.tipodado",{"_index":237,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["tipo",{"_index":173,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"miscellaneous/variables.html":{}}}],["tipodado",{"_index":131,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":497,"title":{},"body":{"components/ListaComponent.html":{}}}],["toolbar",{"_index":347,"title":{},"body":{"components/HeaderComponent.html":{}}}],["top",{"_index":550,"title":{},"body":{"components/ListaComponent.html":{}}}],["transparent",{"_index":549,"title":{},"body":{"components/ListaComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["tslib",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"interfaces/IService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"interfaces/TableHeader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typedef",{"_index":226,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["um",{"_index":320,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"index.html":{}}}],["uma",{"_index":654,"title":{},"body":{"index.html":{}}}],["url",{"_index":121,"title":{},"body":{"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"interfaces/IService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["utiliza",{"_index":372,"title":{},"body":{"components/HomeComponent.html":{}}}],["utilizadas",{"_index":456,"title":{},"body":{"interfaces/IService.html":{}}}],["utilizado",{"_index":311,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["utilizando",{"_index":322,"title":{},"body":{"injectables/EpisodiosService.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"index.html":{}}}],["utilização",{"_index":506,"title":{},"body":{"components/ListaComponent.html":{}}}],["utilize",{"_index":648,"title":{},"body":{"index.html":{}}}],["valor",{"_index":403,"title":{},"body":{"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["valores",{"_index":474,"title":{},"body":{"components/ListaComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"injectables/EpisodiosService.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/DetalhesComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["variable",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":668,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":665,"title":{},"body":{"properties.html":{}}}],["vez",{"_index":275,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["visto",{"_index":273,"title":{},"body":{"components/DetalhesComponent.html":{}}}],["visualização",{"_index":500,"title":{},"body":{"components/ListaComponent.html":{}}}],["void",{"_index":158,"title":{},"body":{"components/DetalhesComponent.html":{},"components/HomeComponent.html":{},"components/ListaComponent.html":{}}}],["yes",{"_index":310,"title":{},"body":{"injectables/EpisodiosService.html":{},"injectables/LocaisService.html":{},"injectables/PersonagensService.html":{}}}],["zone.js",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'frontend-rickemorty'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend-rickemorty';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetalhesComponent', 'selector': 'app-detalhes'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListaComponent', 'selector': 'app-lista'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDetalhesComponent\n\nDetalhesComponent\n\nAppModule -->\n\nDetalhesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nListaComponent\n\nListaComponent\n\nAppModule -->\n\nListaComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DetalhesComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            ListaComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ListaComponent } from './shared/lista/lista.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { HttpClientModule } from  '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs'; \nimport { MatFormFieldModule } from '@angular/material/form-field'; \nimport { MatInputModule } from '@angular/material/input';\nimport { DetalhesComponent } from './pages/detalhes/detalhes.component';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { HeaderComponent } from './shared/header/header.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListaComponent,\n    HomeComponent,\n    DetalhesComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatTabsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatToolbarModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { DetalhesComponent } from './pages/detalhes/detalhes.component';\n\nconst routes: Routes = [\n  { path: 'detalhes/:tipo/:id', component: DetalhesComponent},\n  { path: 'home', component: HomeComponent },\n  { path: '**', redirectTo: '/home'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetalhesComponent.html":{"url":"components/DetalhesComponent.html","title":"component - DetalhesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetalhesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/detalhes/detalhes.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para mostrar os detalhes do dado recebido pela URL (/detalhes/:tipo/:id)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detalhes\n            \n\n\n\n            \n                styleUrls\n                ./detalhes.component.css\n            \n\n\n\n            \n                templateUrl\n                ./detalhes.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dado\n                            \n                            \n                                episodiosColumns\n                            \n                            \n                                idDado\n                            \n                            \n                                listaSecundaria\n                            \n                            \n                                personagensColumns\n                            \n                            \n                                services\n                            \n                            \n                                tipoDado\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                carregarInformacoes\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                recuperarLista\n                            \n                            \n                                redirecionar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, router: Router, personagensService: PersonagensService, locaisService: LocaisService, episodiosService: EpisodiosService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:72\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        personagensService\n                                                  \n                                                        \n                                                                        PersonagensService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locaisService\n                                                  \n                                                        \n                                                                        LocaisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        episodiosService\n                                                  \n                                                        \n                                                                        EpisodiosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        carregarInformacoes\n                        \n                    \n                \n            \n            \n                \ncarregarInformacoes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/detalhes/detalhes.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Método que irá carregar as informações do dado que será exibido na tela.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/detalhes/detalhes.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recuperarLista\n                        \n                    \n                \n            \n            \n                \nrecuperarLista()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/detalhes/detalhes.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Método para carregar a lista secundária do dado\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirecionar\n                        \n                    \n                \n            \n            \n                \nredirecionar(url: string, tipoDado: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/detalhes/detalhes.component.ts:114\n                        \n                    \n\n\n            \n                \n                        Método para redirecionar para outras páginas de detalhes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    String que receberá a URL que será acessada para carregar o novo dado.\n\n                                            \n                                        \n                                        \n                                                tipoDado\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number com o tipo do dado que irá ser carregado na nova página.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:51\n                        \n                    \n\n            \n                \n                    Dado que será exibido.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        episodiosColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableHeader[]\n\n                    \n                \n                \n                    \n                        Default value : columnsDisplayEpisode\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:65\n                        \n                    \n\n            \n                \n                    Ids e Displays dos headers das colunas dentro da lista de episódios.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idDado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:37\n                        \n                    \n\n            \n                \n                    Number, id do dado que terá seus detalhes exibidos. Recebido pela URL (:id).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listaSecundaria\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:58\n                        \n                    \n\n            \n                \n                    Dados que serão exibidos na lista dentro do dado exibido, podendo ser de personagens ou episódios.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personagensColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableHeader[]\n\n                    \n                \n                \n                    \n                        Default value : columnsDisplayCharacter\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:72\n                        \n                    \n\n            \n                \n                    Ids e Displays dos headers das colunas dentro da lista de personagens.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        services\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IService[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:44\n                        \n                    \n\n            \n                \n                    Array de IService que serão as services disponíveis dentro do componente.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tipoDado\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/detalhes/detalhes.component.ts:30\n                        \n                    \n\n            \n                \n                    Number, seria o tipo do dado que terá seus detalhes exibidos, sendo eles: 0 = personagem, 1 = local, 2 = episódio. Recebido pela URL (:tipo).\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { columnsDisplayCharacter, columnsDisplayEpisode } from 'src/app/core/consts/columns-display';\nimport { IService } from 'src/app/core/interface/iservice';\nimport { TableHeader } from 'src/app/core/model/table-header.model';\nimport { EpisodiosService } from 'src/app/core/services/episodios.service';\nimport { LocaisService } from 'src/app/core/services/locais.service';\nimport { PersonagensService } from 'src/app/core/services/personagens.service';\n\n/**\n * Componente para mostrar os detalhes do dado recebido pela URL (/detalhes/:tipo/:id)\n *\n * @export\n * @class DetalhesComponent\n * @typedef {DetalhesComponent}\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-detalhes',\n  templateUrl: './detalhes.component.html',\n  styleUrls: ['./detalhes.component.css']\n})\nexport class DetalhesComponent implements OnInit {\n\n  /**\n   * Number, seria o tipo do dado que terá seus detalhes exibidos, sendo eles: 0 = personagem, 1 = local, 2 = episódio. Recebido pela URL (:tipo).\n   *\n   * @type {number}\n   */\n  tipoDado: number = 0;\n\n  /**\n   * Number, id do dado que terá seus detalhes exibidos. Recebido pela URL (:id).\n   *\n   * @type {number}\n   */\n  idDado: number = 0;\n\n  /**\n   * Array de IService que serão as services disponíveis dentro do componente.\n   *\n   * @type {IService[]}\n   */\n  services: IService[] = [];\n\n  /**\n   * Dado que será exibido.\n   *\n   * @type {*}\n   */\n  dado: any;\n  \n  /**\n   * Dados que serão exibidos na lista dentro do dado exibido, podendo ser de personagens ou episódios.\n   *\n   * @type {any[]}\n   */\n  listaSecundaria: any[] = [];\n\n  /**\n   * Ids e Displays dos headers das colunas dentro da lista de episódios.\n   *\n   * @type {TableHeader[]}\n   */\n  episodiosColumns: TableHeader[] = columnsDisplayEpisode;\n\n  /**\n   * Ids e Displays dos headers das colunas dentro da lista de personagens.\n   *\n   * @type {TableHeader[]}\n   */\n  personagensColumns: TableHeader[] = columnsDisplayCharacter;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private personagensService: PersonagensService,\n    private locaisService: LocaisService,\n    private episodiosService: EpisodiosService,\n  ) {\n    this.services[0] = this.personagensService;\n    this.services[1] = this.locaisService;\n    this.services[2] = this.episodiosService;\n  }\n\n  ngOnInit(): void {\n    this.carregarInformacoes();\n  }\n\n  /**\n   * Método que irá carregar as informações do dado que será exibido na tela.\n   */\n  carregarInformacoes() {\n    this.activatedRoute.params.subscribe(\n      params => {\n        this.tipoDado = Number(params['tipo']);\n        this.idDado = Number(params['id']);\n        this.services[this.tipoDado].listarUnico(this.idDado).subscribe(\n          data => {\n            this.dado = data;\n            this.recuperarLista();\n          }\n        )\n      }\n    )\n  }\n\n  /**\n   * Método para redirecionar para outras páginas de detalhes.\n   *\n   * @param {string} url String que receberá a URL que será acessada para carregar o novo dado.\n   * @param {number} tipoDado Number com o tipo do dado que irá ser carregado na nova página.\n   */\n  redirecionar(url: string, tipoDado: number) {\n    this.services[tipoDado].listarUnicoPorUrl(url).subscribe(\n      data => {\n        this.router.navigate([`/detalhes/${tipoDado}/${data.id}`]);\n      }\n    )\n  }\n  \n  /**\n   * Método para carregar a lista secundária do dado\n   */\n  recuperarLista() {\n    this.listaSecundaria = [];\n    switch(this.tipoDado) {\n      case 0:\n        for (let episodio of this.dado.episode) {\n          this.services[this.tipoDado].listarUnicoPorUrl(episodio).subscribe(\n            data => {\n              this.listaSecundaria = this.listaSecundaria.concat(data);\n            }\n          )\n        }\n        break;\n      case 1:\n        for (let residente of this.dado.residents) {\n          this.services[this.tipoDado].listarUnicoPorUrl(residente).subscribe(\n            data => {\n              this.listaSecundaria = this.listaSecundaria.concat(data);\n            }\n          )\n        }\n        break;\n      case 2:\n        for (let personagem of this.dado.characters) {\n          this.services[this.tipoDado].listarUnicoPorUrl(personagem).subscribe(\n            data => {\n              this.listaSecundaria = this.listaSecundaria.concat(data);\n            }\n          )\n        }\n        break;\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n    \n        \n               \n        \n        ID: {{dado.id}}\n        Nome: {{dado.name}}\n        Status: {{dado.status}}\n        Espécie: {{dado.species}}\n        Tipo: {{dado.type}}\n        Genêro: {{dado.gender}}\n        Origem: {{dado.origin.name}}\n        Visto pela última vez em: {{dado.location.name}}\n        Episódios em que aparece:\n        \n    \n\n    \n        ID: {{dado.id}}\n        Nome: {{dado.name}}\n        Tipo: {{dado.type}}\n        Dimensão: {{dado.dimension}}\n        Residentes:\n        \n    \n\n    \n        ID: {{dado.id}}\n        Nome: {{dado.name}}\n        Data de lançamento: {{dado.air_date}}\n        Episódio: {{dado.episode}}\n        Personagens neste episódio:\n        \n    \n    \n\n    \n\n    \n                \n                    ./detalhes.component.css\n                \n                .texto-link {\n    cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                           ID: {{dado.id}}        Nome: {{dado.name}}        Status: {{dado.status}}        Espécie: {{dado.species}}        Tipo: {{dado.type}}        Genêro: {{dado.gender}}        Origem: {{dado.origin.name}}        Visto pela última vez em: {{dado.location.name}}        Episódios em que aparece:                        ID: {{dado.id}}        Nome: {{dado.name}}        Tipo: {{dado.type}}        Dimensão: {{dado.dimension}}        Residentes:                        ID: {{dado.id}}        Nome: {{dado.name}}        Data de lançamento: {{dado.air_date}}        Episódio: {{dado.episode}}        Personagens neste episódio:                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetalhesComponent', 'selector': 'app-detalhes'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListaComponent', 'selector': 'app-lista'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetalhesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EpisodiosService.html":{"url":"injectables/EpisodiosService.html","title":"injectable - EpisodiosService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EpisodiosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/episodios.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service para recuperação de dados de episódios.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listar\n                            \n                            \n                                listarUnico\n                            \n                            \n                                listarUnicoPorUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/episodios.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listar\n                        \n                    \n                \n            \n            \n                \nlistar(page: number, filtro?: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/episodios.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Método para listagem genérica de episódios.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Pagina a ser consumida.\n\n                                            \n                                        \n                                        \n                                                filtro\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Filtro a ser utilizado no consumo da API.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listarUnico\n                        \n                    \n                \n            \n            \n                \nlistarUnico(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/episodios.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Método para recuperar informações de um único episódio utilizando o ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID do dado que será recuperado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listarUnicoPorUrl\n                        \n                    \n                \n            \n            \n                \nlistarUnicoPorUrl(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/episodios.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Método para recuperar informações de um único episódio utilizando a URL da API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL que será consumida.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/episodios.service.ts:25\n                        \n                    \n\n            \n                \n                    URL da api no enviroment atual.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { IService } from '../interface/iservice';\n\n/**\n * Service para recuperação de dados de episódios.\n *\n * @export\n * @class EpisodiosService\n * @typedef {EpisodiosService}\n * @implements {IService}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EpisodiosService implements IService{\n\n  /**\n   * URL da api no enviroment atual.\n   *\n   * @type {string}\n   */\n  apiUrl: string = environment.apiUrl;\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  /**\n   * Método para listagem genérica de episódios.\n   *\n   * @param {number} page Pagina a ser consumida.\n   * @param {?String} [filtro] Filtro a ser utilizado no consumo da API.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listar (page: number, filtro?: String): Observable {\n    if (filtro) {\n      return this.httpClient.get(`${this.apiUrl}/episode/?page=${page}&name=${filtro}`);\n    } else {\n      return this.httpClient.get(`${this.apiUrl}/episode/?page=${page}`);\n    }\n  }\n\n  /**\n   * Método para recuperar informações de um único episódio utilizando o ID.\n   *\n   * @param {number} id ID do dado que será recuperado.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listarUnico (id: number): Observable {\n    return this.httpClient.get(`${this.apiUrl}/episode/${id}`);\n  }\n\n  /**\n   * Método para recuperar informações de um único episódio utilizando a URL da API.\n   *\n   * @param {string} url URL que será consumida.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listarUnicoPorUrl (url: string): Observable {\n    return this.httpClient.get(url);\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para o Header da aplicação\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Componente para o Header da aplicação\n *\n * @export\n * @class HeaderComponent\n * @typedef {HeaderComponent}\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n\n}\n\n    \n\n    \n        \n\n\n    Rick & Morty Angular\n\n\n\n    Listagem\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                .toolbar-link {\n    cursor: pointer;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Rick & Morty Angular    Listagem'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetalhesComponent', 'selector': 'app-detalhes'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListaComponent', 'selector': 'app-lista'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para a página principal da aplicação.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                episodiosColumns\n                            \n                            \n                                episodiosDados\n                            \n                            \n                                filtro\n                            \n                            \n                                finalPage\n                            \n                            \n                                locaisColumns\n                            \n                            \n                                locaisDados\n                            \n                            \n                                page\n                            \n                            \n                                personagensColumns\n                            \n                            \n                                personagensDados\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                changeSelectedTab\n                            \n                            \n                                listar\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                scroll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(personagensService: PersonagensService, locaisService: LocaisService, episodiosService: EpisodiosService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.component.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        personagensService\n                                                  \n                                                        \n                                                                        PersonagensService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locaisService\n                                                  \n                                                        \n                                                                        LocaisService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        episodiosService\n                                                  \n                                                        \n                                                                        EpisodiosService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilter\n                        \n                    \n                \n            \n            \n                \napplyFilter(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Método acionado quando o filtro é atualizado, limpando os dados atuais e consumindo os novos com a nova pesquisa. Utiliza o campo \"name\" da API para realizar a busca,\nindependente do tipo de dado.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeSelectedTab\n                        \n                    \n                \n            \n            \n                \nchangeSelectedTab(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:189\n                        \n                    \n\n\n            \n                \n                        Método acionado quando a tab é atualizada. Quando o selected está numa lista, as outras não são carregadas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listar\n                        \n                    \n                \n            \n            \n                \nlistar(tipoDado: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Método para consumir os dados da API e preencher os dados na aplicação.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tipoDado\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number que receberá o tipo de dado que deve ser preenchido, sendo 0 = personagem, 1 = local, 2 = episodio\n\n                                            \n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number com a página atual da listagem\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scroll\n                        \n                    \n                \n            \n            \n                \nscroll(tipoDado: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Método acionado quando o componente de lista disparar um scroll. Carrega novos dados, caso hajam, e adicionam a lista.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                tipoDado\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Number que receberá o tipo de dado que deve ser preenchido, sendo 0 = personagem, 1 = local, 2 = episodio\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        episodiosColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableHeader[]\n\n                    \n                \n                \n                    \n                        Default value : columnsDisplayEpisode\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:84\n                        \n                    \n\n            \n                \n                    Ids e Displays dos headers das colunas dentro da lista de episodios.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        episodiosDados\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:77\n                        \n                    \n\n            \n                \n                    Dados que serão exibidos na lista de episodios.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filtro\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:92\n                        \n                    \n\n            \n                \n                    String que receberá o valor do filtro para realizar a filtragem nos dados da lista. Utiliza o campo \"name\" da API para realizar a busca,\nindependente do tipo de dado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finalPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [ 0, 0, 0 ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:42\n                        \n                    \n\n            \n                \n                    Array para guardar a página final da lista na hora da paginação.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locaisColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableHeader[]\n\n                    \n                \n                \n                    \n                        Default value : columnsDisplayLocation\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:70\n                        \n                    \n\n            \n                \n                    Ids e Displays dos headers das colunas dentro da lista de locais.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locaisDados\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:63\n                        \n                    \n\n            \n                \n                    Dados que serão exibidos na lista de locais.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [ 1, 1, 1 ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:35\n                        \n                    \n\n            \n                \n                    Array para a contagem da paginação das listas.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personagensColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableHeader[]\n\n                    \n                \n                \n                    \n                        Default value : columnsDisplayCharacter\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:56\n                        \n                    \n\n            \n                \n                    Ids e Displays dos headers das colunas dentro da lista de personagens.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        personagensDados\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:49\n                        \n                    \n\n            \n                \n                    Dados que serão exibidos na lista de personagens.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.component.ts:28\n                        \n                    \n\n            \n                \n                    Tab selecionado dentro da aplicação.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { columnsDisplayCharacter, columnsDisplayEpisode, columnsDisplayLocation } from 'src/app/core/consts/columns-display';\nimport { TableHeader } from 'src/app/core/model/table-header.model';\nimport { EpisodiosService } from 'src/app/core/services/episodios.service';\nimport { LocaisService } from 'src/app/core/services/locais.service';\nimport { PersonagensService } from 'src/app/core/services/personagens.service';\n\n/**\n * Componente para a página principal da aplicação.\n *\n * @export\n * @class HomeComponent\n * @typedef {HomeComponent}\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  /**\n   * Tab selecionado dentro da aplicação.\n   *\n   * @type {number}\n   */\n  selected: number = 0;\n\n  /**\n   * Array para a contagem da paginação das listas.\n   *\n   * @type {number[]}\n   */\n  page: number[] = [ 1, 1, 1 ];\n\n  /**\n   * Array para guardar a página final da lista na hora da paginação.\n   *\n   * @type {number[]}\n   */\n  finalPage: number[] = [ 0, 0, 0 ];\n\n  /**\n   * Dados que serão exibidos na lista de personagens.\n   *\n   * @type {any[]}\n   */\n  personagensDados: any[] = [];\n\n  /**\n   * Ids e Displays dos headers das colunas dentro da lista de personagens.\n   *\n   * @type {TableHeader[]}\n   */\n  personagensColumns: TableHeader[] = columnsDisplayCharacter;\n\n  /**\n   * Dados que serão exibidos na lista de locais.\n   *\n   * @type {any[]}\n   */\n  locaisDados: any[] = [];\n\n  /**\n   * Ids e Displays dos headers das colunas dentro da lista de locais.\n   *\n   * @type {TableHeader[]}\n   */\n  locaisColumns: TableHeader[] = columnsDisplayLocation;\n\n  /**\n   * Dados que serão exibidos na lista de episodios.\n   *\n   * @type {any[]}\n   */\n  episodiosDados: any[] = [];\n\n  /**\n   * Ids e Displays dos headers das colunas dentro da lista de episodios.\n   *\n   * @type {TableHeader[]}\n   */\n  episodiosColumns: TableHeader[] = columnsDisplayEpisode\n\n  /**\n   * String que receberá o valor do filtro para realizar a filtragem nos dados da lista. Utiliza o campo \"name\" da API para realizar a busca,\n   * independente do tipo de dado\n   *\n   * @type {String}\n   */\n  filtro: String = \"\";\n\n  constructor(\n    private personagensService: PersonagensService,\n    private locaisService: LocaisService,\n    private episodiosService: EpisodiosService,\n  ) { }\n\n  ngOnInit(): void {\n    this.listar(0, 1);\n    this.listar(1, 1);\n    this.listar(2, 1);\n  }\n\n  /**\n   * Método para consumir os dados da API e preencher os dados na aplicação.\n   *\n   * @param {number} tipoDado Number que receberá o tipo de dado que deve ser preenchido, sendo 0 = personagem, 1 = local, 2 = episodio\n   * @param {number} page Number com a página atual da listagem\n   */\n  listar (tipoDado: number, page: number) {\n    console.log(`LISTANDO, TIPO: ${tipoDado}, PÁGINA: ${page}/${this.finalPage[tipoDado]}`)\n    switch(tipoDado){\n      case 0:\n        if (this.filtro != \"\") {\n          this.personagensService.listar(page, this.filtro).subscribe(\n            data => {\n              this.personagensDados = this.personagensDados.concat(data.results);\n              this.finalPage[tipoDado] = data.info.pages;\n            }\n          );\n        } else {\n          this.personagensService.listar(page).subscribe(\n            data => {\n              this.personagensDados = this.personagensDados.concat(data.results);\n              this.finalPage[tipoDado] = data.info.pages;\n            }\n          ); \n        }\n        break;\n      case 1:\n        if (this.filtro != \"\") {\n          this.locaisService.listar(page, this.filtro).subscribe(\n            data => {\n              this.locaisDados = this.locaisDados.concat(data.results);\n              this.finalPage[tipoDado] = data.info.pages;\n            }\n          );\n        } else {\n          this.locaisService.listar(page).subscribe(\n            data => {\n              this.locaisDados = this.locaisDados.concat(data.results);\n              this.finalPage[tipoDado] = data.info.pages;\n            }\n          ); \n        }\n        break;\n      case 2:\n        if (this.filtro != \"\") {\n          this.episodiosService.listar(page, this.filtro).subscribe(\n            data => {\n              this.episodiosDados = this.episodiosDados.concat(data.results);\n              this.finalPage[tipoDado] = data.info.pages;\n            }\n          );\n        } else {\n          this.episodiosService.listar(page).subscribe(\n            data => {\n              this.episodiosDados = this.episodiosDados.concat(data.results);\n              this.finalPage[tipoDado] = data.info.pages;\n            }\n          ); \n        }\n        break;\n    }\n  }\n\n  /**\n   * Método acionado quando o filtro é atualizado, limpando os dados atuais e consumindo os novos com a nova pesquisa. Utiliza o campo \"name\" da API para realizar a busca,\n   * independente do tipo de dado.\n   *\n   * @param {*} e\n   */\n  applyFilter(e: any) {\n    this.filtro = e.target.value;\n    this.page = [ 1, 1, 1 ];\n    this.personagensDados = [];\n    this.locaisDados = [];\n    this.episodiosDados = [];\n    this.listar(this.selected, this.page[this.selected]);\n  }\n\n  /**\n   * Método acionado quando a tab é atualizada. Quando o selected está numa lista, as outras não são carregadas\n   *\n   * @param {*} e\n   */\n  changeSelectedTab (e: any) {\n    this.selected = e;\n  }\n\n  /**\n   * Método acionado quando o componente de lista disparar um scroll. Carrega novos dados, caso hajam, e adicionam a lista.\n   *\n   * @param {number} tipoDado Number que receberá o tipo de dado que deve ser preenchido, sendo 0 = personagem, 1 = local, 2 = episodio\n   */\n  scroll(tipoDado: number) {\n    console.log(`Scrollando (${tipoDado})...`)\n    if (this.page[tipoDado] \n    \n\n    \n        \n\n\n\n    \n\n    \n        Pesquisar\n        \n    \n\n    \n\n    \n         \n                \n        \n         \n            \n        \n         \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Pesquisar                                                                                                                   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetalhesComponent', 'selector': 'app-detalhes'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListaComponent', 'selector': 'app-lista'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IService.html":{"url":"interfaces/IService.html","title":"interface - IService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interface/iservice.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            listar\n                                        \n                                \n                                \n                                        \n                                            listarUnico\n                                        \n                                \n                                \n                                        \n                                            listarUnicoPorUrl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        listar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listar:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listarUnico\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listarUnico:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listarUnicoPorUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listarUnicoPorUrl:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\n// Interface para as services utilizadas na aplicação\n\nexport interface IService {\n    listar: (page: number, filtro?: String) => Observable\n    listarUnico: (id: number) => Observable\n    listarUnicoPorUrl: (url: string) => Observable\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListaComponent.html":{"url":"components/ListaComponent.html","title":"component - ListaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/lista/lista.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para listagem.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lista\n            \n\n\n\n            \n                styleUrls\n                ./lista.component.css\n            \n\n\n\n            \n                templateUrl\n                ./lista.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columnsToDisplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                abrirDetalhes\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onTableScroll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                tipoDado\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                scrollFimPagina\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/lista/lista.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/lista/lista.component.ts:39\n                            \n                        \n                \n                    \n                        Dados que serão exibidos na tabela.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        displayedColumns\n                    \n                \n                \n                    \n                        Type :         TableHeader[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/lista/lista.component.ts:25\n                            \n                        \n                \n                    \n                        Array de TableHeader, seriam as colunas da tabela, sendo que id é o valor que que puxará os valores da API e display que será o valor que será mostrado no header da coluna.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tipoDado\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/lista/lista.component.ts:32\n                            \n                        \n                \n                    \n                        Seria o tipo do dado que a lista está exibindo, sendo eles: 0 = personagem, 1 = local, 2 = episódio.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        scrollFimPagina\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/lista/lista.component.ts:46\n                            \n                        \n                \n                    \n                        EventEmitter que será disparado ao componente pai quando a tabela chegar no fim de seu scroll.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        abrirDetalhes\n                        \n                    \n                \n            \n            \n                \nabrirDetalhes(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/lista/lista.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Resgate dos dados da API para consumo da tabela, utilizando a service passada pelo\ninput do componente.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID do dado que fora clicado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/lista/lista.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onTableScroll\n                        \n                    \n                \n            \n            \n                \nonTableScroll(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/lista/lista.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Método acionado em todo scroll até o final da tabela, carregando a próxima página caso\na visualização esteja no final da tabela e a página atual não seja a última. Possibilita o\nscroll infinito.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        columnsToDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     String[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/lista/lista.component.ts:53\n                        \n                    \n\n            \n                \n                    Mapeamento das colunas para utilização no HTML\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TableHeader } from 'src/app/core/model/table-header.model';\n\n/**\n * Componente para listagem.\n *\n * @export\n * @class ListaComponent\n * @typedef {ListaComponent}\n * @implements {OnInit}\n */\n@Component({\n  selector: 'app-lista',\n  templateUrl: './lista.component.html',\n  styleUrls: ['./lista.component.css']\n})\nexport class ListaComponent implements OnInit {\n\n  /**\n   * Array de TableHeader, seriam as colunas da tabela, sendo que id é o valor que que puxará os valores da API e display que será o valor que será mostrado no header da coluna.\n   *\n   * @type {!TableHeader[]}\n   */\n  @Input() displayedColumns!: TableHeader[];\n\n  /**\n   * Seria o tipo do dado que a lista está exibindo, sendo eles: 0 = personagem, 1 = local, 2 = episódio.\n   *\n   * @type {!number}\n   */\n  @Input() tipoDado!: number;\n\n  /**\n   * Dados que serão exibidos na tabela.\n   *\n   * @type {!any[]}\n   */\n  @Input() data!: any[];\n\n  /**\n   * EventEmitter que será disparado ao componente pai quando a tabela chegar no fim de seu scroll.\n   *\n   * @type {*}\n   */\n  @Output() scrollFimPagina = new EventEmitter();\n\n  /**\n   * Mapeamento das colunas para utilização no HTML\n   *\n   * @type {String[]}\n   */\n  columnsToDisplay: String[] = [];\n\n  constructor (\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    // Mapping realizado no OnInit pois não é possível realizá-lo diretamente no destino (HTML)\n    this.columnsToDisplay = this.displayedColumns.map((column) => (column).id);\n  }\n\n  /**\n   * Método acionado em todo scroll até o final da tabela, carregando a próxima página caso\n   * a visualização esteja no final da tabela e a página atual não seja a última. Possibilita o\n   * scroll infinito.\n   *\n   * @param {*} e\n   */\n  onTableScroll(e: any) {\n    const tableViewHeight = e.target.offsetHeight;\n    const tableScrollHeight = e.target.scrollHeight;\n    const scrollLocation = e.target.scrollTop;\n    \n    // Buffer de 200px para o scroll até o final da página\n    const buffer = 200;\n    const limit = tableScrollHeight - tableViewHeight - buffer;\n    if (scrollLocation > limit) {\n      this.scrollFimPagina.emit(this.tipoDado);\n    }\n  }\n\n  /**\n   * Resgate dos dados da API para consumo da tabela, utilizando a service passada pelo \n   * input do componente.\n   *\n   * @param {number} id ID do dado que fora clicado.\n   */\n  abrirDetalhes(id: number) {\n    this.router.navigate([`detalhes/${this.tipoDado}/${id}`]);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n    \n        \n        \n        \n             {{column.display}} \n             {{dado[column.id]}} \n        \n\n        \n        \n\n    \n\n\n    \n\n    \n                \n                    ./lista.component.css\n                \n                mat-table {\n    display: table;\n}\n\n.table-lista {\n    height: 600px;\n    overflow: auto;\n}\n\n\n.mat-mdc-row .mat-mdc-cell {\n    border-bottom: 1px solid transparent;\n    border-top: 1px solid transparent;\n    cursor: pointer;\n}\n\n.mat-mdc-row:hover .mat-mdc-cell {\n    border-color: currentColor;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                         {{column.display}}              {{dado[column.id]}}                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DetalhesComponent', 'selector': 'app-detalhes'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ListaComponent', 'selector': 'app-lista'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocaisService.html":{"url":"injectables/LocaisService.html","title":"injectable - LocaisService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocaisService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/locais.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service para recuperação de dados de locais.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listar\n                            \n                            \n                                listarUnico\n                            \n                            \n                                listarUnicoPorUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/locais.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listar\n                        \n                    \n                \n            \n            \n                \nlistar(page: number, filtro?: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/locais.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Método para listagem genérica de locais.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Pagina a ser consumida.\n\n                                            \n                                        \n                                        \n                                                filtro\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Filtro a ser utilizado no consumo da API.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listarUnico\n                        \n                    \n                \n            \n            \n                \nlistarUnico(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/locais.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Método para recuperar informações de um único local utilizando o ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID do dado que será recuperado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listarUnicoPorUrl\n                        \n                    \n                \n            \n            \n                \nlistarUnicoPorUrl(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/locais.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Método para recuperar informações de um único local utilizando a URL da API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL que será consumida.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/locais.service.ts:26\n                        \n                    \n\n            \n                \n                    URL da api no enviroment atual.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { IService } from '../interface/iservice';\n\n/**\n * Service para recuperação de dados de locais.\n * @date 11/16/2023 - 2:35:10 AM\n *\n * @export\n * @class LocaisService\n * @typedef {LocaisService}\n * @implements {IService}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocaisService implements IService {\n\n  /**\n   * URL da api no enviroment atual.\n   *\n   * @type {string}\n   */\n  apiUrl: string = environment.apiUrl;\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  /**\n   * Método para listagem genérica de locais.\n   *\n   * @param {number} page Pagina a ser consumida.\n   * @param {?String} [filtro] Filtro a ser utilizado no consumo da API.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listar (page: number, filtro?: String): Observable {\n    if (filtro) {\n      return this.httpClient.get(`${this.apiUrl}/location/?page=${page}&name=${filtro}`);\n    } else {\n      return this.httpClient.get(`${this.apiUrl}/location/?page=${page}`);\n    }\n  }\n\n  /**\n   * Método para recuperar informações de um único local utilizando o ID.\n   *\n   * @param {number} id ID do dado que será recuperado.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listarUnico (id: number): Observable {\n    return this.httpClient.get(`${this.apiUrl}/location/${id}`);\n  }\n\n  /**\n   * Método para recuperar informações de um único local utilizando a URL da API.\n   *\n   * @param {string} url URL que será consumida.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listarUnicoPorUrl (url: string): Observable {\n    return this.httpClient.get(url);\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonagensService.html":{"url":"injectables/PersonagensService.html","title":"injectable - PersonagensService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PersonagensService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/personagens.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service para recuperação de dados de personagens.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listar\n                            \n                            \n                                listarUnico\n                            \n                            \n                                listarUnicoPorUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/personagens.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listar\n                        \n                    \n                \n            \n            \n                \nlistar(page: number, filtro?: String)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/personagens.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Método para listagem genérica de personagens.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Pagina a ser consumida.\n\n                                            \n                                        \n                                        \n                                                filtro\n                                            \n                                                            String\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    Filtro a ser utilizado no consumo da API.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listarUnico\n                        \n                    \n                \n            \n            \n                \nlistarUnico(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/personagens.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Método para recuperar informações de um único personagem utilizando o ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID do dado que será recuperado.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listarUnicoPorUrl\n                        \n                    \n                \n            \n            \n                \nlistarUnicoPorUrl(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/personagens.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Método para recuperar informações de um único personagem utilizando a URL da API.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    URL que será consumida.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable com o resultado da pesquisa.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.apiUrl\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/personagens.service.ts:25\n                        \n                    \n\n            \n                \n                    URL da api no enviroment atual.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { IService } from '../interface/iservice';\n\n/**\n * Service para recuperação de dados de personagens.\n *\n * @export\n * @class PersonagensService\n * @typedef {PersonagensService}\n * @implements {IService}\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonagensService implements IService {\n\n  /**\n   * URL da api no enviroment atual.\n   *\n   * @type {string}\n   */\n  apiUrl: string = environment.apiUrl;\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  /**\n   * Método para listagem genérica de personagens.\n   *\n   * @param {number} page Pagina a ser consumida.\n   * @param {?String} [filtro] Filtro a ser utilizado no consumo da API.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listar (page: number, filtro?: String): Observable {\n    if (filtro) {\n      return this.httpClient.get(`${this.apiUrl}/character/?page=${page}&name=${filtro}`);\n    } else {\n      return this.httpClient.get(`${this.apiUrl}/character/?page=${page}`);\n    }\n  }\n\n  /**\n   * Método para recuperar informações de um único personagem utilizando o ID.\n   *\n   * @param {number} id ID do dado que será recuperado.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listarUnico (id: number): Observable {\n    return this.httpClient.get(`${this.apiUrl}/character/${id}`);\n  }\n\n  /**\n   * Método para recuperar informações de um único personagem utilizando a URL da API.\n   *\n   * @param {string} url URL que será consumida.\n   * @returns {Observable} Observable com o resultado da pesquisa.\n   */\n  listarUnicoPorUrl (url: string): Observable {\n    return this.httpClient.get(url);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableHeader.html":{"url":"interfaces/TableHeader.html","title":"interface - TableHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/model/table-header.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            display\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TableHeader {\n    id: string;\n    display: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/consts/columns-display.ts\n            \n            variable\n            columnsDisplayCharacter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/consts/columns-display.ts\n            \n            variable\n            columnsDisplayEpisode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/consts/columns-display.ts\n            \n            variable\n            columnsDisplayLocation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interface/iservice.ts\n            \n            interface\n            IService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/model/table-header.model.ts\n            \n            interface\n            TableHeader\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/episodios.service.ts\n            \n            injectable\n            EpisodiosService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/core/services/locais.service.ts\n            \n            injectable\n            LocaisService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/core/services/personagens.service.ts\n            \n            injectable\n            PersonagensService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/pages/detalhes/detalhes.component.ts\n            \n            component\n            DetalhesComponent\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/lista/lista.component.ts\n            \n            component\n            ListaComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.0.0\n        \n            @angular/cdk : ^16.2.12\n        \n            @angular/common : ^16.0.0\n        \n            @angular/compiler : ^16.0.0\n        \n            @angular/core : ^16.0.0\n        \n            @angular/forms : ^16.0.0\n        \n            @angular/material : ^16.2.12\n        \n            @angular/platform-browser : ^16.0.0\n        \n            @angular/platform-browser-dynamic : ^16.0.0\n        \n            @angular/router : ^16.0.0\n        \n            bootstrap : ^5.3.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProjeto de Front-End Angular para a API de Rick & Morty\nPre-requisitos: Node.js e NPM package manager.\n\n   1: Abra um terminal na pasta raiz do projeto e instale as depências utilizando o comando \"npm install\" \n   2: Após as dependências serem instaladas, rode o comando \"ng serve\" para rodar o projeto na porta 4200 do localhost (http://localhost:4200/). Ps.: Caso queira que a aba seja aberta automaticamente, utilize \"ng serve -o\" \n   3: Caso queira checar a documentação, utilize o comando \"npm run compodoc:build-and-serve\" no terminal e abra uma guia no localhost na porta 8080 (http://localhost:8080) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDetalhesComponent\n\nDetalhesComponent\n\nAppModule -->\n\nDetalhesComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nListaComponent\n\nListaComponent\n\nAppModule -->\n\nListaComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        3 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            columnsDisplayCharacter   (src/.../columns-display.ts)\n                        \n                        \n                            columnsDisplayEpisode   (src/.../columns-display.ts)\n                        \n                        \n                            columnsDisplayLocation   (src/.../columns-display.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/consts/columns-display.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        columnsDisplayCharacter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { id: \"id\", display: \"ID\" },\n    { id: \"name\", display: \"Nome\" },\n    { id: \"status\", display: \"Status\" },\n    { id: \"species\", display: \"Espécie\" },\n    { id: \"gender\", display: \"Genêro\" },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsDisplayEpisode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { id: \"id\", display: \"ID\" },\n    { id: \"name\", display: \"Nome\" },\n    { id: \"air_date\", display: \"Data de lançamento\" },\n    { id: \"episode\", display: \"Episódio\" },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columnsDisplayLocation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { id: \"id\", display: \"ID\" },\n    { id: \"name\", display: \"Nome\" },\n    { id: \"type\", display: \"Tipo\" },\n    { id: \"dimension\", display: \"Dimensão\" },\n]\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    apiUrl: \"https://rickandmortyapi.com/api\"\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    apiUrl: \"https://rickandmortyapi.com/api\"\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
